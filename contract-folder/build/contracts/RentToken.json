{
  "contractName": "RentToken",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setBuildingContractAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "requestApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BuyRentTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        }
      ],
      "name": "buyRentTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BuyRentTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
<<<<<<< HEAD
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BuyRentTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"buyRentTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"requestApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setBuildingContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/RentToken.sol\":\"RentToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x07df9fedb0da00f76d6aa575f1f1503fc98ce3aab39d0cd985f0b4d493862688\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0b378a69a7eaf2f83cf7c42ffbf1645e26d333c212ce4d5608e19f2fc1c5123\",\"dweb:/ipfs/QmNtbhZLQy7EvXuyuVMsVqdHcCD2Zs7dcH7FMQi4w6kLa8\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x50296fdcbedd4557f9d1af7d1e7f046295c8f8268d804ae9f95a12013cf234d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45c8b98967d5cd73588908ed91510bdd4d53ed75c4fefc88856d41c8876ea6be\",\"dweb:/ipfs/QmeZistgp9HUd6akinJbqmvp9EN7W66tjaTNSUND5Uk6fu\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x304f19cf24a06eedd9504a83b77f2f3ec18b3051f8be3c2f0bfe6322836a750c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3d4a71904db7ea8d795c9cb0011d2aedd58275b28eaf2d5c4778a4bcca4cf33\",\"dweb:/ipfs/QmepegNEsM3qGWbhzMghW9ZBXCiaeLE4wdbz2s9moahFMk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x8e0594ca83b3934c669828fc591e2cf60bbd4b1d0b6c6cff2d8c5d8bc3101948\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a93024c5ebe75c01e6387f84e3273830ee503503060d7a76d90ccd1537328ee\",\"dweb:/ipfs/Qmb3GZqhuXS5cUPBo9aiKvyyhB1RMbho9qSnAgfYQadWLT\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x1b98d02330ab4e3c96637553da8368857030e04371122c85cd2b1bb8bf03d45a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e72688e49fe6f13b21ab433a91ce7e6e32143679217274c31c1b6b24710296db\",\"dweb:/ipfs/QmcqRguYEUFB87v4ewUA5LTfYrbgapF1vhbfjV6G7YpRgx\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xac6730f01fcedb865781979054b19a54f62f30e0554b95aab008db3908feb941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f929d9e44febf608536c68cf4072f0e69a94c9a1f5d94a89723c2e3a8ae222c\",\"dweb:/ipfs/QmYTc8Qgtn3UiNEjnYYyrdax4LgaK37EpTvk2NVqby75qx\"]},\"project:/contracts/RentToken.sol\":{\"keccak256\":\"0x73ad8d2876af2ad6ac4620e1f01aadb61463688c4acedd199c4ffa5d9cec220d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d18242c52fcce156805849b1296260a461b2a9e377dc6747e6e3c299c5a3d4f\",\"dweb:/ipfs/QmcSsRcqpke8HH9UCG6jqLyArVQXMFHhk7PvkQEpfqNbyS\"]}},\"version\":1}",
  "bytecode": "0x608060405260016006556000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200005857600080fd5b50336040518060400160405280600981526020017f526f6f6d546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f5265544b000000000000000000000000000000000000000000000000000000008152508160039081620000d79190620004fa565b508060049081620000e99190620004fa565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620001615760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000158919062000626565b60405180910390fd5b6200017281620001ba60201b60201c565b5033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000643565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200030257607f821691505b602082108103620003185762000317620002ba565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000343565b6200038e868362000343565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003db620003d5620003cf84620003a6565b620003b0565b620003a6565b9050919050565b6000819050919050565b620003f783620003ba565b6200040f6200040682620003e2565b84845462000350565b825550505050565b600090565b6200042662000417565b62000433818484620003ec565b505050565b5b818110156200045b576200044f6000826200041c565b60018101905062000439565b5050565b601f821115620004aa5762000474816200031e565b6200047f8462000333565b810160208510156200048f578190505b620004a76200049e8562000333565b83018262000438565b50505b505050565b600082821c905092915050565b6000620004cf60001984600802620004af565b1980831691505092915050565b6000620004ea8383620004bc565b9150826002028217905092915050565b620005058262000280565b67ffffffffffffffff8111156200052157620005206200028b565b5b6200052d8254620002e9565b6200053a8282856200045f565b600060209050601f8311600181146200057257600084156200055d578287015190505b620005698582620004dc565b865550620005d9565b601f19841662000582866200031e565b60005b82811015620005ac5784890151825560018201915060208501945060208101905062000585565b86831015620005cc5784890151620005c8601f891682620004bc565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200060e82620005e1565b9050919050565b620006208162000601565b82525050565b60006020820190506200063d600083018462000615565b92915050565b61159780620006536000396000f3fe6080604052600436106100f35760003560e01c8063715018a61161008a578063d4625ae311610059578063d4625ae31461032c578063dd62ed3e14610336578063e8c8cc2814610373578063f2fde38b1461038a576100f3565b8063715018a6146102825780638da5cb5b1461029957806395d89b41146102c4578063a9059cbb146102ef576100f3565b806323b872dd116100c657806323b872dd146101b4578063313ce567146101f15780636d148f841461021c57806370a0823114610245576100f3565b806306fdde03146100f8578063095ea7b31461012357806318160ddd14610160578063191dd1491461018b575b600080fd5b34801561010457600080fd5b5061010d6103b3565b60405161011a919061110d565b60405180910390f35b34801561012f57600080fd5b5061014a600480360381019061014591906111c8565b610445565b6040516101579190611223565b60405180910390f35b34801561016c57600080fd5b50610175610468565b604051610182919061124d565b60405180910390f35b34801561019757600080fd5b506101b260048036038101906101ad9190611268565b610472565b005b3480156101c057600080fd5b506101db60048036038101906101d691906112a8565b610546565b6040516101e89190611223565b60405180910390f35b3480156101fd57600080fd5b50610206610575565b6040516102139190611317565b60405180910390f35b34801561022857600080fd5b50610243600480360381019061023e9190611332565b61057e565b005b34801561025157600080fd5b5061026c6004803603810190610267919061135f565b61060d565b604051610279919061124d565b60405180910390f35b34801561028e57600080fd5b50610297610655565b005b3480156102a557600080fd5b506102ae610669565b6040516102bb919061139b565b60405180910390f35b3480156102d057600080fd5b506102d9610693565b6040516102e6919061110d565b60405180910390f35b3480156102fb57600080fd5b50610316600480360381019061031191906111c8565b610725565b6040516103239190611223565b60405180910390f35b610334610748565b005b34801561034257600080fd5b5061035d600480360381019061035891906113b6565b610761565b60405161036a919061124d565b60405180910390f35b34801561037f57600080fd5b506103886107e8565b005b34801561039657600080fd5b506103b160048036038101906103ac919061135f565b61088a565b005b6060600380546103c290611425565b80601f01602080910402602001604051908101604052809291908181526020018280546103ee90611425565b801561043b5780601f106104105761010080835404028352916020019161043b565b820191906000526020600020905b81548152906001019060200180831161041e57829003601f168201915b5050505050905090565b600080610450610910565b905061045d818585610918565b600191505092915050565b6000600254905090565b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036104d1576104d0611456565b5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461052b57600080fd5b610542816006548461053d91906114b4565b61092a565b5050565b600080610551610910565b905061055e8582856109ac565b610569858585610a40565b60019150509392505050565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036105dd576105dc611456565b5b610609600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682610445565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61065d610b34565b6106676000610bbb565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546106a290611425565b80601f01602080910402602001604051908101604052809291908181526020018280546106ce90611425565b801561071b5780601f106106f05761010080835404028352916020019161071b565b820191906000526020600020905b8154815290600101906020018083116106fe57829003601f168201915b5050505050905090565b600080610730610910565b905061073d818585610a40565b600191505092915050565b61075f336006543461075a91906114b4565b61092a565b565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461084757610846611456565b5b33600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610892610b34565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109045760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108fb919061139b565b60405180910390fd5b61090d81610bbb565b50565b600033905090565b6109258383836001610c81565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361099c5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610993919061139b565b60405180910390fd5b6109a860008383610e58565b5050565b60006109b88484610761565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a3a5781811015610a2a578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a21939291906114f6565b60405180910390fd5b610a3984848484036000610c81565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ab25760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610aa9919061139b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b245760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b1b919061139b565b60405180910390fd5b610b2f838383610e58565b505050565b610b3c610910565b73ffffffffffffffffffffffffffffffffffffffff16610b5a610669565b73ffffffffffffffffffffffffffffffffffffffff1614610bb957610b7d610910565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610bb0919061139b565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610cf35760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610cea919061139b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d655760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d5c919061139b565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610e52578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e49919061124d565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610eaa578060026000828254610e9e919061152d565b92505081905550610f7d565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f36578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f2d939291906114f6565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fc65780600260008282540392505081905550611013565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611070919061124d565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110b757808201518184015260208101905061109c565b60008484015250505050565b6000601f19601f8301169050919050565b60006110df8261107d565b6110e98185611088565b93506110f9818560208601611099565b611102816110c3565b840191505092915050565b6000602082019050818103600083015261112781846110d4565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061115f82611134565b9050919050565b61116f81611154565b811461117a57600080fd5b50565b60008135905061118c81611166565b92915050565b6000819050919050565b6111a581611192565b81146111b057600080fd5b50565b6000813590506111c28161119c565b92915050565b600080604083850312156111df576111de61112f565b5b60006111ed8582860161117d565b92505060206111fe858286016111b3565b9150509250929050565b60008115159050919050565b61121d81611208565b82525050565b60006020820190506112386000830184611214565b92915050565b61124781611192565b82525050565b6000602082019050611262600083018461123e565b92915050565b6000806040838503121561127f5761127e61112f565b5b600061128d858286016111b3565b925050602061129e8582860161117d565b9150509250929050565b6000806000606084860312156112c1576112c061112f565b5b60006112cf8682870161117d565b93505060206112e08682870161117d565b92505060406112f1868287016111b3565b9150509250925092565b600060ff82169050919050565b611311816112fb565b82525050565b600060208201905061132c6000830184611308565b92915050565b6000602082840312156113485761134761112f565b5b6000611356848285016111b3565b91505092915050565b6000602082840312156113755761137461112f565b5b60006113838482850161117d565b91505092915050565b61139581611154565b82525050565b60006020820190506113b0600083018461138c565b92915050565b600080604083850312156113cd576113cc61112f565b5b60006113db8582860161117d565b92505060206113ec8582860161117d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061143d57607f821691505b6020821081036114505761144f6113f6565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114bf82611192565b91506114ca83611192565b92508282026114d881611192565b915082820484148315176114ef576114ee611485565b5b5092915050565b600060608201905061150b600083018661138c565b611518602083018561123e565b611525604083018461123e565b949350505050565b600061153882611192565b915061154383611192565b925082820190508082111561155b5761155a611485565b5b9291505056fea26469706673582212206afa4ad0905ac9c73d6fb481102eddcee82c995d263473d3ced0f925efac4cda64736f6c63430008130033",
  "deployedBytecode": "",
=======
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BuyRentTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"buyRentTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"requestApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setBuildingContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/RentToken.sol\":\"RentToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x07df9fedb0da00f76d6aa575f1f1503fc98ce3aab39d0cd985f0b4d493862688\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0b378a69a7eaf2f83cf7c42ffbf1645e26d333c212ce4d5608e19f2fc1c5123\",\"dweb:/ipfs/QmNtbhZLQy7EvXuyuVMsVqdHcCD2Zs7dcH7FMQi4w6kLa8\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x50296fdcbedd4557f9d1af7d1e7f046295c8f8268d804ae9f95a12013cf234d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45c8b98967d5cd73588908ed91510bdd4d53ed75c4fefc88856d41c8876ea6be\",\"dweb:/ipfs/QmeZistgp9HUd6akinJbqmvp9EN7W66tjaTNSUND5Uk6fu\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x304f19cf24a06eedd9504a83b77f2f3ec18b3051f8be3c2f0bfe6322836a750c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3d4a71904db7ea8d795c9cb0011d2aedd58275b28eaf2d5c4778a4bcca4cf33\",\"dweb:/ipfs/QmepegNEsM3qGWbhzMghW9ZBXCiaeLE4wdbz2s9moahFMk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x8e0594ca83b3934c669828fc591e2cf60bbd4b1d0b6c6cff2d8c5d8bc3101948\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a93024c5ebe75c01e6387f84e3273830ee503503060d7a76d90ccd1537328ee\",\"dweb:/ipfs/Qmb3GZqhuXS5cUPBo9aiKvyyhB1RMbho9qSnAgfYQadWLT\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x1b98d02330ab4e3c96637553da8368857030e04371122c85cd2b1bb8bf03d45a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e72688e49fe6f13b21ab433a91ce7e6e32143679217274c31c1b6b24710296db\",\"dweb:/ipfs/QmcqRguYEUFB87v4ewUA5LTfYrbgapF1vhbfjV6G7YpRgx\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xac6730f01fcedb865781979054b19a54f62f30e0554b95aab008db3908feb941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f929d9e44febf608536c68cf4072f0e69a94c9a1f5d94a89723c2e3a8ae222c\",\"dweb:/ipfs/QmYTc8Qgtn3UiNEjnYYyrdax4LgaK37EpTvk2NVqby75qx\"]},\"project:/contracts/RentToken.sol\":{\"keccak256\":\"0x5fcf04864c149430bc20eb1a2114b56a040f55512db6b4f9428d9274b72e0606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73f4a870baac9ce59ff879a9e6a2696584df74ecc3c8f26616268a8c05bfb9aa\",\"dweb:/ipfs/QmS225wPhjp5tix6WG3ss8Rrc54Rkf3eqKGVHh2oMgSg9G\"]}},\"version\":1}",
  "bytecode": "0x608060405260016006556000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200005857600080fd5b50336040518060400160405280600981526020017f526f6f6d546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f5265544b000000000000000000000000000000000000000000000000000000008152508160039081620000d79190620004fa565b508060049081620000e99190620004fa565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620001615760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000158919062000626565b60405180910390fd5b6200017281620001ba60201b60201c565b5033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000643565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200030257607f821691505b602082108103620003185762000317620002ba565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000343565b6200038e868362000343565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003db620003d5620003cf84620003a6565b620003b0565b620003a6565b9050919050565b6000819050919050565b620003f783620003ba565b6200040f6200040682620003e2565b84845462000350565b825550505050565b600090565b6200042662000417565b62000433818484620003ec565b505050565b5b818110156200045b576200044f6000826200041c565b60018101905062000439565b5050565b601f821115620004aa5762000474816200031e565b6200047f8462000333565b810160208510156200048f578190505b620004a76200049e8562000333565b83018262000438565b50505b505050565b600082821c905092915050565b6000620004cf60001984600802620004af565b1980831691505092915050565b6000620004ea8383620004bc565b9150826002028217905092915050565b620005058262000280565b67ffffffffffffffff8111156200052157620005206200028b565b5b6200052d8254620002e9565b6200053a8282856200045f565b600060209050601f8311600181146200057257600084156200055d578287015190505b620005698582620004dc565b865550620005d9565b601f19841662000582866200031e565b60005b82811015620005ac5784890151825560018201915060208501945060208101905062000585565b86831015620005cc5784890151620005c8601f891682620004bc565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200060e82620005e1565b9050919050565b620006208162000601565b82525050565b60006020820190506200063d600083018462000615565b92915050565b61159780620006536000396000f3fe6080604052600436106100f35760003560e01c8063715018a61161008a578063d4625ae311610059578063d4625ae31461032c578063dd62ed3e14610336578063e8c8cc2814610373578063f2fde38b1461038a576100f3565b8063715018a6146102825780638da5cb5b1461029957806395d89b41146102c4578063a9059cbb146102ef576100f3565b806323b872dd116100c657806323b872dd146101b4578063313ce567146101f15780636d148f841461021c57806370a0823114610245576100f3565b806306fdde03146100f8578063095ea7b31461012357806318160ddd14610160578063191dd1491461018b575b600080fd5b34801561010457600080fd5b5061010d6103b3565b60405161011a919061110d565b60405180910390f35b34801561012f57600080fd5b5061014a600480360381019061014591906111c8565b610445565b6040516101579190611223565b60405180910390f35b34801561016c57600080fd5b50610175610468565b604051610182919061124d565b60405180910390f35b34801561019757600080fd5b506101b260048036038101906101ad9190611268565b610472565b005b3480156101c057600080fd5b506101db60048036038101906101d691906112a8565b610546565b6040516101e89190611223565b60405180910390f35b3480156101fd57600080fd5b50610206610575565b6040516102139190611317565b60405180910390f35b34801561022857600080fd5b50610243600480360381019061023e9190611332565b61057e565b005b34801561025157600080fd5b5061026c6004803603810190610267919061135f565b61060d565b604051610279919061124d565b60405180910390f35b34801561028e57600080fd5b50610297610655565b005b3480156102a557600080fd5b506102ae610669565b6040516102bb919061139b565b60405180910390f35b3480156102d057600080fd5b506102d9610693565b6040516102e6919061110d565b60405180910390f35b3480156102fb57600080fd5b50610316600480360381019061031191906111c8565b610725565b6040516103239190611223565b60405180910390f35b610334610748565b005b34801561034257600080fd5b5061035d600480360381019061035891906113b6565b610761565b60405161036a919061124d565b60405180910390f35b34801561037f57600080fd5b506103886107e8565b005b34801561039657600080fd5b506103b160048036038101906103ac919061135f565b61088a565b005b6060600380546103c290611425565b80601f01602080910402602001604051908101604052809291908181526020018280546103ee90611425565b801561043b5780601f106104105761010080835404028352916020019161043b565b820191906000526020600020905b81548152906001019060200180831161041e57829003601f168201915b5050505050905090565b600080610450610910565b905061045d818585610918565b600191505092915050565b6000600254905090565b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036104d1576104d0611456565b5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461052b57600080fd5b610542816006548461053d91906114b4565b61092a565b5050565b600080610551610910565b905061055e8582856109ac565b610569858585610a40565b60019150509392505050565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036105dd576105dc611456565b5b610609600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682610445565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61065d610b34565b6106676000610bbb565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546106a290611425565b80601f01602080910402602001604051908101604052809291908181526020018280546106ce90611425565b801561071b5780601f106106f05761010080835404028352916020019161071b565b820191906000526020600020905b8154815290600101906020018083116106fe57829003601f168201915b5050505050905090565b600080610730610910565b905061073d818585610a40565b600191505092915050565b61075f336006543461075a91906114b4565b61092a565b565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461084757610846611456565b5b33600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610892610b34565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109045760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108fb919061139b565b60405180910390fd5b61090d81610bbb565b50565b600033905090565b6109258383836001610c81565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361099c5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610993919061139b565b60405180910390fd5b6109a860008383610e58565b5050565b60006109b88484610761565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a3a5781811015610a2a578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a21939291906114f6565b60405180910390fd5b610a3984848484036000610c81565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ab25760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610aa9919061139b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b245760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b1b919061139b565b60405180910390fd5b610b2f838383610e58565b505050565b610b3c610910565b73ffffffffffffffffffffffffffffffffffffffff16610b5a610669565b73ffffffffffffffffffffffffffffffffffffffff1614610bb957610b7d610910565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610bb0919061139b565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610cf35760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610cea919061139b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d655760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d5c919061139b565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610e52578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e49919061124d565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610eaa578060026000828254610e9e919061152d565b92505081905550610f7d565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f36578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f2d939291906114f6565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fc65780600260008282540392505081905550611013565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611070919061124d565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110b757808201518184015260208101905061109c565b60008484015250505050565b6000601f19601f8301169050919050565b60006110df8261107d565b6110e98185611088565b93506110f9818560208601611099565b611102816110c3565b840191505092915050565b6000602082019050818103600083015261112781846110d4565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061115f82611134565b9050919050565b61116f81611154565b811461117a57600080fd5b50565b60008135905061118c81611166565b92915050565b6000819050919050565b6111a581611192565b81146111b057600080fd5b50565b6000813590506111c28161119c565b92915050565b600080604083850312156111df576111de61112f565b5b60006111ed8582860161117d565b92505060206111fe858286016111b3565b9150509250929050565b60008115159050919050565b61121d81611208565b82525050565b60006020820190506112386000830184611214565b92915050565b61124781611192565b82525050565b6000602082019050611262600083018461123e565b92915050565b6000806040838503121561127f5761127e61112f565b5b600061128d858286016111b3565b925050602061129e8582860161117d565b9150509250929050565b6000806000606084860312156112c1576112c061112f565b5b60006112cf8682870161117d565b93505060206112e08682870161117d565b92505060406112f1868287016111b3565b9150509250925092565b600060ff82169050919050565b611311816112fb565b82525050565b600060208201905061132c6000830184611308565b92915050565b6000602082840312156113485761134761112f565b5b6000611356848285016111b3565b91505092915050565b6000602082840312156113755761137461112f565b5b60006113838482850161117d565b91505092915050565b61139581611154565b82525050565b60006020820190506113b0600083018461138c565b92915050565b600080604083850312156113cd576113cc61112f565b5b60006113db8582860161117d565b92505060206113ec8582860161117d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061143d57607f821691505b6020821081036114505761144f6113f6565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114bf82611192565b91506114ca83611192565b92508282026114d881611192565b915082820484148315176114ef576114ee611485565b5b5092915050565b600060608201905061150b600083018661138c565b611518602083018561123e565b611525604083018461123e565b949350505050565b600061153882611192565b915061154383611192565b925082820190508082111561155b5761155a611485565b5b9291505056fea2646970667358221220e6051b435903cefa23ce9f8109d678c0a0a603fd82308e525a726211fa26eed364736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106100f35760003560e01c8063715018a61161008a578063d4625ae311610059578063d4625ae31461032c578063dd62ed3e14610336578063e8c8cc2814610373578063f2fde38b1461038a576100f3565b8063715018a6146102825780638da5cb5b1461029957806395d89b41146102c4578063a9059cbb146102ef576100f3565b806323b872dd116100c657806323b872dd146101b4578063313ce567146101f15780636d148f841461021c57806370a0823114610245576100f3565b806306fdde03146100f8578063095ea7b31461012357806318160ddd14610160578063191dd1491461018b575b600080fd5b34801561010457600080fd5b5061010d6103b3565b60405161011a919061110d565b60405180910390f35b34801561012f57600080fd5b5061014a600480360381019061014591906111c8565b610445565b6040516101579190611223565b60405180910390f35b34801561016c57600080fd5b50610175610468565b604051610182919061124d565b60405180910390f35b34801561019757600080fd5b506101b260048036038101906101ad9190611268565b610472565b005b3480156101c057600080fd5b506101db60048036038101906101d691906112a8565b610546565b6040516101e89190611223565b60405180910390f35b3480156101fd57600080fd5b50610206610575565b6040516102139190611317565b60405180910390f35b34801561022857600080fd5b50610243600480360381019061023e9190611332565b61057e565b005b34801561025157600080fd5b5061026c6004803603810190610267919061135f565b61060d565b604051610279919061124d565b60405180910390f35b34801561028e57600080fd5b50610297610655565b005b3480156102a557600080fd5b506102ae610669565b6040516102bb919061139b565b60405180910390f35b3480156102d057600080fd5b506102d9610693565b6040516102e6919061110d565b60405180910390f35b3480156102fb57600080fd5b50610316600480360381019061031191906111c8565b610725565b6040516103239190611223565b60405180910390f35b610334610748565b005b34801561034257600080fd5b5061035d600480360381019061035891906113b6565b610761565b60405161036a919061124d565b60405180910390f35b34801561037f57600080fd5b506103886107e8565b005b34801561039657600080fd5b506103b160048036038101906103ac919061135f565b61088a565b005b6060600380546103c290611425565b80601f01602080910402602001604051908101604052809291908181526020018280546103ee90611425565b801561043b5780601f106104105761010080835404028352916020019161043b565b820191906000526020600020905b81548152906001019060200180831161041e57829003601f168201915b5050505050905090565b600080610450610910565b905061045d818585610918565b600191505092915050565b6000600254905090565b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036104d1576104d0611456565b5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461052b57600080fd5b610542816006548461053d91906114b4565b61092a565b5050565b600080610551610910565b905061055e8582856109ac565b610569858585610a40565b60019150509392505050565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036105dd576105dc611456565b5b610609600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682610445565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61065d610b34565b6106676000610bbb565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546106a290611425565b80601f01602080910402602001604051908101604052809291908181526020018280546106ce90611425565b801561071b5780601f106106f05761010080835404028352916020019161071b565b820191906000526020600020905b8154815290600101906020018083116106fe57829003601f168201915b5050505050905090565b600080610730610910565b905061073d818585610a40565b600191505092915050565b61075f336006543461075a91906114b4565b61092a565b565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461084757610846611456565b5b33600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610892610b34565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109045760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108fb919061139b565b60405180910390fd5b61090d81610bbb565b50565b600033905090565b6109258383836001610c81565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361099c5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610993919061139b565b60405180910390fd5b6109a860008383610e58565b5050565b60006109b88484610761565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a3a5781811015610a2a578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a21939291906114f6565b60405180910390fd5b610a3984848484036000610c81565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ab25760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610aa9919061139b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b245760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b1b919061139b565b60405180910390fd5b610b2f838383610e58565b505050565b610b3c610910565b73ffffffffffffffffffffffffffffffffffffffff16610b5a610669565b73ffffffffffffffffffffffffffffffffffffffff1614610bb957610b7d610910565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610bb0919061139b565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610cf35760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610cea919061139b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d655760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d5c919061139b565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610e52578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e49919061124d565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610eaa578060026000828254610e9e919061152d565b92505081905550610f7d565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f36578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f2d939291906114f6565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fc65780600260008282540392505081905550611013565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611070919061124d565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110b757808201518184015260208101905061109c565b60008484015250505050565b6000601f19601f8301169050919050565b60006110df8261107d565b6110e98185611088565b93506110f9818560208601611099565b611102816110c3565b840191505092915050565b6000602082019050818103600083015261112781846110d4565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061115f82611134565b9050919050565b61116f81611154565b811461117a57600080fd5b50565b60008135905061118c81611166565b92915050565b6000819050919050565b6111a581611192565b81146111b057600080fd5b50565b6000813590506111c28161119c565b92915050565b600080604083850312156111df576111de61112f565b5b60006111ed8582860161117d565b92505060206111fe858286016111b3565b9150509250929050565b60008115159050919050565b61121d81611208565b82525050565b60006020820190506112386000830184611214565b92915050565b61124781611192565b82525050565b6000602082019050611262600083018461123e565b92915050565b6000806040838503121561127f5761127e61112f565b5b600061128d858286016111b3565b925050602061129e8582860161117d565b9150509250929050565b6000806000606084860312156112c1576112c061112f565b5b60006112cf8682870161117d565b93505060206112e08682870161117d565b92505060406112f1868287016111b3565b9150509250925092565b600060ff82169050919050565b611311816112fb565b82525050565b600060208201905061132c6000830184611308565b92915050565b6000602082840312156113485761134761112f565b5b6000611356848285016111b3565b91505092915050565b6000602082840312156113755761137461112f565b5b60006113838482850161117d565b91505092915050565b61139581611154565b82525050565b60006020820190506113b0600083018461138c565b92915050565b600080604083850312156113cd576113cc61112f565b5b60006113db8582860161117d565b92505060206113ec8582860161117d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061143d57607f821691505b6020821081036114505761144f6113f6565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114bf82611192565b91506114ca83611192565b92508282026114d881611192565b915082820484148315176114ef576114ee611485565b5b5092915050565b600060608201905061150b600083018661138c565b611518602083018561123e565b611525604083018461123e565b949350505050565b600061153882611192565b915061154383611192565b925082820190508082111561155b5761155a611485565b5b9291505056fea2646970667358221220e6051b435903cefa23ce9f8109d678c0a0a603fd82308e525a726211fa26eed364736f6c63430008130033",
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5817:24",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "66:40:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "77:22:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "93:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "87:5:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "87:12:24"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "77:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "49:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "59:6:24",
                "type": ""
              }
            ],
            "src": "7:99:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "140:152:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "157:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "160:77:24",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "150:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "150:88:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "150:88:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "254:1:24",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "257:4:24",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "247:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "247:15:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "247:15:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "278:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "281:4:24",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "271:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "271:15:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "271:15:24"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "112:180:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "326:152:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "343:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "346:77:24",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "336:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "336:88:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "336:88:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "440:1:24",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "443:4:24",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "433:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "433:15:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "433:15:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "464:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "467:4:24",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "457:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "457:15:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "457:15:24"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "298:180:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "535:269:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "545:22:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "559:4:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "565:1:24",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "555:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "555:12:24"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "545:6:24"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "576:38:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "606:4:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "612:1:24",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "602:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "602:12:24"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "580:18:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "653:51:24",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "667:27:24",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "681:6:24"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "689:4:24",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "677:3:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "677:17:24"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "667:6:24"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "633:18:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "626:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "626:26:24"
                  },
                  "nodeType": "YulIf",
                  "src": "623:81:24"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "756:42:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "770:16:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "770:18:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "770:18:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "720:18:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "743:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "751:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "740:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "740:14:24"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "717:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "717:38:24"
                  },
                  "nodeType": "YulIf",
                  "src": "714:84:24"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "519:4:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "528:6:24",
                "type": ""
              }
            ],
            "src": "484:320:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "864:87:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "874:11:24",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "882:3:24"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "874:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "902:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "905:3:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "895:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "895:14:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "895:14:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "918:26:24",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "936:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "939:4:24",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "926:9:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "926:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "918:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "851:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "859:4:24",
                "type": ""
              }
            ],
            "src": "810:141:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1001:49:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1011:33:24",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1029:5:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1036:2:24",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1025:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1025:14:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1041:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "1021:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1021:23:24"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "1011:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "divide_by_32_ceil",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "984:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "994:6:24",
                "type": ""
              }
            ],
            "src": "957:93:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1109:54:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1119:37:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "bits",
                        "nodeType": "YulIdentifier",
                        "src": "1144:4:24"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1150:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "1140:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1140:16:24"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "1119:8:24"
                    }
                  ]
                }
              ]
            },
            "name": "shift_left_dynamic",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "bits",
                "nodeType": "YulTypedName",
                "src": "1084:4:24",
                "type": ""
              },
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1090:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "1100:8:24",
                "type": ""
              }
            ],
            "src": "1056:107:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1245:317:24",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1255:35:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "shiftBytes",
                        "nodeType": "YulIdentifier",
                        "src": "1276:10:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1288:1:24",
                        "type": "",
                        "value": "8"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "1272:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1272:18:24"
                  },
                  "variables": [
                    {
                      "name": "shiftBits",
                      "nodeType": "YulTypedName",
                      "src": "1259:9:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1299:109:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "shiftBits",
                        "nodeType": "YulIdentifier",
                        "src": "1330:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1341:66:24",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "shift_left_dynamic",
                      "nodeType": "YulIdentifier",
                      "src": "1311:18:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1311:97:24"
                  },
                  "variables": [
                    {
                      "name": "mask",
                      "nodeType": "YulTypedName",
                      "src": "1303:4:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1417:51:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "shiftBits",
                        "nodeType": "YulIdentifier",
                        "src": "1448:9:24"
                      },
                      {
                        "name": "toInsert",
                        "nodeType": "YulIdentifier",
                        "src": "1459:8:24"
                      }
                    ],
                    "functionName": {
                      "name": "shift_left_dynamic",
                      "nodeType": "YulIdentifier",
                      "src": "1429:18:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1429:39:24"
                  },
                  "variableNames": [
                    {
                      "name": "toInsert",
                      "nodeType": "YulIdentifier",
                      "src": "1417:8:24"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1477:30:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1490:5:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "mask",
                            "nodeType": "YulIdentifier",
                            "src": "1501:4:24"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "1497:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1497:9:24"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1486:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1486:21:24"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1477:5:24"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1516:40:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1529:5:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "toInsert",
                            "nodeType": "YulIdentifier",
                            "src": "1540:8:24"
                          },
                          {
                            "name": "mask",
                            "nodeType": "YulIdentifier",
                            "src": "1550:4:24"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1536:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1536:19:24"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1526:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1526:30:24"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "1516:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "update_byte_slice_dynamic32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1206:5:24",
                "type": ""
              },
              {
                "name": "shiftBytes",
                "nodeType": "YulTypedName",
                "src": "1213:10:24",
                "type": ""
              },
              {
                "name": "toInsert",
                "nodeType": "YulTypedName",
                "src": "1225:8:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "1238:6:24",
                "type": ""
              }
            ],
            "src": "1169:393:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1613:32:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1623:16:24",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1634:5:24"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1623:7:24"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1595:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1605:7:24",
                "type": ""
              }
            ],
            "src": "1568:77:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1683:28:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1693:12:24",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1700:5:24"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1693:3:24"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1669:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "1679:3:24",
                "type": ""
              }
            ],
            "src": "1651:60:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1777:82:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1787:66:24",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1845:5:24"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1827:17:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1827:24:24"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "1818:8:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1818:34:24"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1800:17:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1800:53:24"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1787:9:24"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1757:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1767:9:24",
                "type": ""
              }
            ],
            "src": "1717:142:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1912:28:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1922:12:24",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1929:5:24"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1922:3:24"
                    }
                  ]
                }
              ]
            },
            "name": "prepare_store_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1898:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "1908:3:24",
                "type": ""
              }
            ],
            "src": "1865:75:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2022:193:24",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2032:63:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value_0",
                        "nodeType": "YulIdentifier",
                        "src": "2087:7:24"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint256_to_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2056:30:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2056:39:24"
                  },
                  "variables": [
                    {
                      "name": "convertedValue_0",
                      "nodeType": "YulTypedName",
                      "src": "2036:16:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "slot",
                        "nodeType": "YulIdentifier",
                        "src": "2111:4:24"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "2151:4:24"
                              }
                            ],
                            "functionName": {
                              "name": "sload",
                              "nodeType": "YulIdentifier",
                              "src": "2145:5:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2145:11:24"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2158:6:24"
                          },
                          {
                            "arguments": [
                              {
                                "name": "convertedValue_0",
                                "nodeType": "YulIdentifier",
                                "src": "2190:16:24"
                              }
                            ],
                            "functionName": {
                              "name": "prepare_store_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2166:23:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2166:41:24"
                          }
                        ],
                        "functionName": {
                          "name": "update_byte_slice_dynamic32",
                          "nodeType": "YulIdentifier",
                          "src": "2117:27:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2117:91:24"
                      }
                    ],
                    "functionName": {
                      "name": "sstore",
                      "nodeType": "YulIdentifier",
                      "src": "2104:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2104:105:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2104:105:24"
                }
              ]
            },
            "name": "update_storage_value_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot",
                "nodeType": "YulTypedName",
                "src": "1999:4:24",
                "type": ""
              },
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2005:6:24",
                "type": ""
              },
              {
                "name": "value_0",
                "nodeType": "YulTypedName",
                "src": "2013:7:24",
                "type": ""
              }
            ],
            "src": "1946:269:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2270:24:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2280:8:24",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2287:1:24",
                    "type": "",
                    "value": "0"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "2280:3:24"
                    }
                  ]
                }
              ]
            },
            "name": "zero_value_for_split_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "2266:3:24",
                "type": ""
              }
            ],
            "src": "2221:73:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2353:136:24",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2363:46:24",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "zero_value_for_split_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2377:30:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2377:32:24"
                  },
                  "variables": [
                    {
                      "name": "zero_0",
                      "nodeType": "YulTypedName",
                      "src": "2367:6:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "slot",
                        "nodeType": "YulIdentifier",
                        "src": "2462:4:24"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2468:6:24"
                      },
                      {
                        "name": "zero_0",
                        "nodeType": "YulIdentifier",
                        "src": "2476:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "update_storage_value_t_uint256_to_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2418:43:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2418:65:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2418:65:24"
                }
              ]
            },
            "name": "storage_set_to_zero_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot",
                "nodeType": "YulTypedName",
                "src": "2339:4:24",
                "type": ""
              },
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2345:6:24",
                "type": ""
              }
            ],
            "src": "2300:189:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2545:136:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2612:63:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "start",
                              "nodeType": "YulIdentifier",
                              "src": "2656:5:24"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2663:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "storage_set_to_zero_t_uint256",
                            "nodeType": "YulIdentifier",
                            "src": "2626:29:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2626:39:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2626:39:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "start",
                        "nodeType": "YulIdentifier",
                        "src": "2565:5:24"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2572:3:24"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2562:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2562:14:24"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2577:26:24",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2579:22:24",
                        "value": {
                          "arguments": [
                            {
                              "name": "start",
                              "nodeType": "YulIdentifier",
                              "src": "2592:5:24"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2599:1:24",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2588:3:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2588:13:24"
                        },
                        "variableNames": [
                          {
                            "name": "start",
                            "nodeType": "YulIdentifier",
                            "src": "2579:5:24"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2559:2:24",
                    "statements": []
                  },
                  "src": "2555:120:24"
                }
              ]
            },
            "name": "clear_storage_range_t_bytes1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "start",
                "nodeType": "YulTypedName",
                "src": "2533:5:24",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2540:3:24",
                "type": ""
              }
            ],
            "src": "2495:186:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2766:464:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2792:431:24",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2806:54:24",
                        "value": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "2854:5:24"
                            }
                          ],
                          "functionName": {
                            "name": "array_dataslot_t_string_storage",
                            "nodeType": "YulIdentifier",
                            "src": "2822:31:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2822:38:24"
                        },
                        "variables": [
                          {
                            "name": "dataArea",
                            "nodeType": "YulTypedName",
                            "src": "2810:8:24",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2873:63:24",
                        "value": {
                          "arguments": [
                            {
                              "name": "dataArea",
                              "nodeType": "YulIdentifier",
                              "src": "2896:8:24"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "startIndex",
                                  "nodeType": "YulIdentifier",
                                  "src": "2924:10:24"
                                }
                              ],
                              "functionName": {
                                "name": "divide_by_32_ceil",
                                "nodeType": "YulIdentifier",
                                "src": "2906:17:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2906:29:24"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2892:3:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2892:44:24"
                        },
                        "variables": [
                          {
                            "name": "deleteStart",
                            "nodeType": "YulTypedName",
                            "src": "2877:11:24",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3093:27:24",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3095:23:24",
                              "value": {
                                "name": "dataArea",
                                "nodeType": "YulIdentifier",
                                "src": "3110:8:24"
                              },
                              "variableNames": [
                                {
                                  "name": "deleteStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "3095:11:24"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "startIndex",
                              "nodeType": "YulIdentifier",
                              "src": "3077:10:24"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3089:2:24",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "3074:2:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3074:18:24"
                        },
                        "nodeType": "YulIf",
                        "src": "3071:49:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "deleteStart",
                              "nodeType": "YulIdentifier",
                              "src": "3162:11:24"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "dataArea",
                                  "nodeType": "YulIdentifier",
                                  "src": "3179:8:24"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "len",
                                      "nodeType": "YulIdentifier",
                                      "src": "3207:3:24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "divide_by_32_ceil",
                                    "nodeType": "YulIdentifier",
                                    "src": "3189:17:24"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3189:22:24"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3175:3:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3175:37:24"
                            }
                          ],
                          "functionName": {
                            "name": "clear_storage_range_t_bytes1",
                            "nodeType": "YulIdentifier",
                            "src": "3133:28:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3133:80:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3133:80:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "len",
                        "nodeType": "YulIdentifier",
                        "src": "2783:3:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2788:2:24",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2780:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2780:11:24"
                  },
                  "nodeType": "YulIf",
                  "src": "2777:446:24"
                }
              ]
            },
            "name": "clean_up_bytearray_end_slots_t_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2742:5:24",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "2749:3:24",
                "type": ""
              },
              {
                "name": "startIndex",
                "nodeType": "YulTypedName",
                "src": "2754:10:24",
                "type": ""
              }
            ],
            "src": "2687:543:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3299:54:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3309:37:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "bits",
                        "nodeType": "YulIdentifier",
                        "src": "3334:4:24"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3340:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "3330:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3330:16:24"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "3309:8:24"
                    }
                  ]
                }
              ]
            },
            "name": "shift_right_unsigned_dynamic",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "bits",
                "nodeType": "YulTypedName",
                "src": "3274:4:24",
                "type": ""
              },
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3280:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "3290:8:24",
                "type": ""
              }
            ],
            "src": "3236:117:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3410:118:24",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3420:68:24",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3469:1:24",
                                "type": "",
                                "value": "8"
                              },
                              {
                                "name": "bytes",
                                "nodeType": "YulIdentifier",
                                "src": "3472:5:24"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "3465:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3465:13:24"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3484:1:24",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "3480:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3480:6:24"
                          }
                        ],
                        "functionName": {
                          "name": "shift_right_unsigned_dynamic",
                          "nodeType": "YulIdentifier",
                          "src": "3436:28:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3436:51:24"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "3432:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3432:56:24"
                  },
                  "variables": [
                    {
                      "name": "mask",
                      "nodeType": "YulTypedName",
                      "src": "3424:4:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3497:25:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3511:4:24"
                      },
                      {
                        "name": "mask",
                        "nodeType": "YulIdentifier",
                        "src": "3517:4:24"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3507:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3507:15:24"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "3497:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "mask_bytes_dynamic",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3387:4:24",
                "type": ""
              },
              {
                "name": "bytes",
                "nodeType": "YulTypedName",
                "src": "3393:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "3403:6:24",
                "type": ""
              }
            ],
            "src": "3359:169:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3614:214:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3747:37:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3774:4:24"
                      },
                      {
                        "name": "len",
                        "nodeType": "YulIdentifier",
                        "src": "3780:3:24"
                      }
                    ],
                    "functionName": {
                      "name": "mask_bytes_dynamic",
                      "nodeType": "YulIdentifier",
                      "src": "3755:18:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3755:29:24"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "3747:4:24"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3793:29:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3804:4:24"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3814:1:24",
                            "type": "",
                            "value": "2"
                          },
                          {
                            "name": "len",
                            "nodeType": "YulIdentifier",
                            "src": "3817:3:24"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "3810:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3810:11:24"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "3801:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3801:21:24"
                  },
                  "variableNames": [
                    {
                      "name": "used",
                      "nodeType": "YulIdentifier",
                      "src": "3793:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "extract_used_part_and_set_length_of_short_byte_array",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3595:4:24",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "3601:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "used",
                "nodeType": "YulTypedName",
                "src": "3609:4:24",
                "type": ""
              }
            ],
            "src": "3533:295:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3925:1303:24",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3936:51:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "3983:3:24"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3950:32:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3950:37:24"
                  },
                  "variables": [
                    {
                      "name": "newLen",
                      "nodeType": "YulTypedName",
                      "src": "3940:6:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4072:22:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "4074:16:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4074:18:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4074:18:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "4044:6:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4052:18:24",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4041:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4041:30:24"
                  },
                  "nodeType": "YulIf",
                  "src": "4038:56:24"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4104:52:24",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "slot",
                            "nodeType": "YulIdentifier",
                            "src": "4150:4:24"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "4144:5:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4144:11:24"
                      }
                    ],
                    "functionName": {
                      "name": "extract_byte_array_length",
                      "nodeType": "YulIdentifier",
                      "src": "4118:25:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4118:38:24"
                  },
                  "variables": [
                    {
                      "name": "oldLen",
                      "nodeType": "YulTypedName",
                      "src": "4108:6:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "slot",
                        "nodeType": "YulIdentifier",
                        "src": "4249:4:24"
                      },
                      {
                        "name": "oldLen",
                        "nodeType": "YulIdentifier",
                        "src": "4255:6:24"
                      },
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "4263:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "clean_up_bytearray_end_slots_t_string_storage",
                      "nodeType": "YulIdentifier",
                      "src": "4203:45:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4203:67:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4203:67:24"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4280:18:24",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4297:1:24",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulTypedName",
                      "src": "4284:9:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4308:17:24",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4321:4:24",
                    "type": "",
                    "value": "0x20"
                  },
                  "variableNames": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulIdentifier",
                      "src": "4308:9:24"
                    }
                  ]
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4372:611:24",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "4386:37:24",
                            "value": {
                              "arguments": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "4405:6:24"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4417:4:24",
                                      "type": "",
                                      "value": "0x1f"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "4413:3:24"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4413:9:24"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "4401:3:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4401:22:24"
                            },
                            "variables": [
                              {
                                "name": "loopEnd",
                                "nodeType": "YulTypedName",
                                "src": "4390:7:24",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "4437:51:24",
                            "value": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "4483:4:24"
                                }
                              ],
                              "functionName": {
                                "name": "array_dataslot_t_string_storage",
                                "nodeType": "YulIdentifier",
                                "src": "4451:31:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4451:37:24"
                            },
                            "variables": [
                              {
                                "name": "dstPtr",
                                "nodeType": "YulTypedName",
                                "src": "4441:6:24",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "4501:10:24",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4510:1:24",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "4505:1:24",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "4569:163:24",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4594:6:24"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "src",
                                                "nodeType": "YulIdentifier",
                                                "src": "4612:3:24"
                                              },
                                              {
                                                "name": "srcOffset",
                                                "nodeType": "YulIdentifier",
                                                "src": "4617:9:24"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "4608:3:24"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4608:19:24"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "4602:5:24"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4602:26:24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "4587:6:24"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4587:42:24"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4587:42:24"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4646:24:24",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4660:6:24"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4668:1:24",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4656:3:24"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4656:14:24"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dstPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "4646:6:24"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4687:31:24",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "srcOffset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4704:9:24"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4715:2:24",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4700:3:24"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4700:18:24"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "srcOffset",
                                      "nodeType": "YulIdentifier",
                                      "src": "4687:9:24"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "4535:1:24"
                                },
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "4538:7:24"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "4532:2:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4532:14:24"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "4547:21:24",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4549:17:24",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "4558:1:24"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4561:4:24",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4554:3:24"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4554:12:24"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "4549:1:24"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "4528:3:24",
                              "statements": []
                            },
                            "src": "4524:208:24"
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "4768:156:24",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4786:43:24",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "4813:3:24"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4818:9:24"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4809:3:24"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4809:19:24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4803:5:24"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4803:26:24"
                                  },
                                  "variables": [
                                    {
                                      "name": "lastValue",
                                      "nodeType": "YulTypedName",
                                      "src": "4790:9:24",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4853:6:24"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "lastValue",
                                            "nodeType": "YulIdentifier",
                                            "src": "4880:9:24"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "newLen",
                                                "nodeType": "YulIdentifier",
                                                "src": "4895:6:24"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4903:4:24",
                                                "type": "",
                                                "value": "0x1f"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nodeType": "YulIdentifier",
                                              "src": "4891:3:24"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4891:17:24"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mask_bytes_dynamic",
                                          "nodeType": "YulIdentifier",
                                          "src": "4861:18:24"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4861:48:24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "4846:6:24"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4846:64:24"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4846:64:24"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "4751:7:24"
                                },
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "4760:6:24"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "4748:2:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4748:19:24"
                            },
                            "nodeType": "YulIf",
                            "src": "4745:179:24"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "4944:4:24"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "4958:6:24"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4966:1:24",
                                          "type": "",
                                          "value": "2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nodeType": "YulIdentifier",
                                        "src": "4954:3:24"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4954:14:24"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4970:1:24",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4950:3:24"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4950:22:24"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "4937:6:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4937:36:24"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4937:36:24"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "4365:618:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4370:1:24",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5000:222:24",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "5014:14:24",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5027:1:24",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "value",
                                "nodeType": "YulTypedName",
                                "src": "5018:5:24",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "5051:67:24",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5069:35:24",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "5088:3:24"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5093:9:24"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5084:3:24"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5084:19:24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5078:5:24"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5078:26:24"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "5069:5:24"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "name": "newLen",
                              "nodeType": "YulIdentifier",
                              "src": "5044:6:24"
                            },
                            "nodeType": "YulIf",
                            "src": "5041:77:24"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "5138:4:24"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "5197:5:24"
                                    },
                                    {
                                      "name": "newLen",
                                      "nodeType": "YulIdentifier",
                                      "src": "5204:6:24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "extract_used_part_and_set_length_of_short_byte_array",
                                    "nodeType": "YulIdentifier",
                                    "src": "5144:52:24"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5144:67:24"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "5131:6:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5131:81:24"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5131:81:24"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "4992:230:24",
                      "value": "default"
                    }
                  ],
                  "expression": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "4345:6:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4353:2:24",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4342:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4342:14:24"
                  },
                  "nodeType": "YulSwitch",
                  "src": "4335:887:24"
                }
              ]
            },
            "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot",
                "nodeType": "YulTypedName",
                "src": "3914:4:24",
                "type": ""
              },
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "3920:3:24",
                "type": ""
              }
            ],
            "src": "3833:1395:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5279:81:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5289:65:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5304:5:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5311:42:24",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5300:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5300:54:24"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5289:7:24"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5261:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5271:7:24",
                "type": ""
              }
            ],
            "src": "5234:126:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5411:51:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5421:35:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5450:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "5432:17:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5432:24:24"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5421:7:24"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5393:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5403:7:24",
                "type": ""
              }
            ],
            "src": "5366:96:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5533:53:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5550:3:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5573:5:24"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5555:17:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5555:24:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5543:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5543:37:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5543:37:24"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5521:5:24",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5528:3:24",
                "type": ""
              }
            ],
            "src": "5468:118:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5690:124:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5700:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5712:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5723:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5708:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5708:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5700:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5780:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5793:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5804:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5789:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5789:17:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5736:43:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5736:71:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5736:71:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5662:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5674:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5685:4:24",
                "type": ""
              }
            ],
            "src": "5592:222:24"
          }
        ]
      },
      "contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 24,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8777:24",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "66:40:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "77:22:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "93:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "87:5:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "87:12:24"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "77:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "49:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "59:6:24",
                "type": ""
              }
            ],
            "src": "7:99:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "208:73:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "225:3:24"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "230:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "218:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "218:19:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "218:19:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "246:29:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "265:3:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "270:4:24",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "261:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "261:14:24"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "246:11:24"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "180:3:24",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "185:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "196:11:24",
                "type": ""
              }
            ],
            "src": "112:169:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "349:184:24",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "359:10:24",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "368:1:24",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "363:1:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "428:63:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "453:3:24"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "458:1:24"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "449:3:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "449:11:24"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "472:3:24"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "477:1:24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "468:3:24"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "468:11:24"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "462:5:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "462:18:24"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "442:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "442:39:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "442:39:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "389:1:24"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "392:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "386:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "386:13:24"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "400:19:24",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "402:15:24",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "411:1:24"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "414:2:24",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "407:3:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "407:10:24"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "402:1:24"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "382:3:24",
                    "statements": []
                  },
                  "src": "378:113:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "511:3:24"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "516:6:24"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "507:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "507:16:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "525:1:24",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "500:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "500:27:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "500:27:24"
                }
              ]
            },
            "name": "copy_memory_to_memory_with_cleanup",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "331:3:24",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "336:3:24",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "341:6:24",
                "type": ""
              }
            ],
            "src": "287:246:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "587:54:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "597:38:24",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "615:5:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "622:2:24",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "611:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "611:14:24"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "631:2:24",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "627:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "627:7:24"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "607:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "607:28:24"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "597:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "570:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "580:6:24",
                "type": ""
              }
            ],
            "src": "539:102:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "739:285:24",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "749:53:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "796:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "763:32:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "763:39:24"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "753:6:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "811:78:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "877:3:24"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "882:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "818:58:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "818:71:24"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "811:3:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "937:5:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "944:4:24",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "933:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "933:16:24"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "951:3:24"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "956:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "898:34:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "898:65:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "898:65:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "972:46:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "983:3:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1010:6:24"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "988:21:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "988:29:24"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "979:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "979:39:24"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "972:3:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "720:5:24",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "727:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "735:3:24",
                "type": ""
              }
            ],
            "src": "647:377:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1148:195:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1158:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1170:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1181:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1166:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1166:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1158:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1205:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1216:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1201:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1201:17:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1224:4:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1230:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1220:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1220:20:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1194:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1194:47:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1194:47:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1250:86:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1322:6:24"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1331:4:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1258:63:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1258:78:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1250:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1120:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1132:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1143:4:24",
                "type": ""
              }
            ],
            "src": "1030:313:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1389:35:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1399:19:24",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1415:2:24",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1409:5:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1409:9:24"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1399:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1382:6:24",
                "type": ""
              }
            ],
            "src": "1349:75:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1519:28:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1536:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1539:1:24",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1529:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1529:12:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1529:12:24"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1430:117:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1642:28:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1659:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1662:1:24",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1652:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1652:12:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1652:12:24"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1553:117:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1721:81:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1731:65:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1746:5:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1753:42:24",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1742:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1742:54:24"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1731:7:24"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1703:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1713:7:24",
                "type": ""
              }
            ],
            "src": "1676:126:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1853:51:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1863:35:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1892:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1874:17:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1874:24:24"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1863:7:24"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1835:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1845:7:24",
                "type": ""
              }
            ],
            "src": "1808:96:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1953:79:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2010:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2019:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2022:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2012:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2012:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2012:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1976:5:24"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2001:5:24"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1983:17:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1983:24:24"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1973:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1973:35:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1966:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1966:43:24"
                  },
                  "nodeType": "YulIf",
                  "src": "1963:63:24"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1946:5:24",
                "type": ""
              }
            ],
            "src": "1910:122:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2090:87:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2100:29:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2122:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2109:12:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2109:20:24"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2100:5:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2165:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2138:26:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2138:33:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2138:33:24"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2068:6:24",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2076:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2084:5:24",
                "type": ""
              }
            ],
            "src": "2038:139:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2228:32:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2238:16:24",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2249:5:24"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2238:7:24"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2210:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2220:7:24",
                "type": ""
              }
            ],
            "src": "2183:77:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2309:79:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2366:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2375:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2378:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2368:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2368:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2368:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2332:5:24"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2357:5:24"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2339:17:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2339:24:24"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2329:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2329:35:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2322:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2322:43:24"
                  },
                  "nodeType": "YulIf",
                  "src": "2319:63:24"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2302:5:24",
                "type": ""
              }
            ],
            "src": "2266:122:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2446:87:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2456:29:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2478:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2465:12:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2465:20:24"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2456:5:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2521:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2494:26:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2494:33:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2494:33:24"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2424:6:24",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2432:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2440:5:24",
                "type": ""
              }
            ],
            "src": "2394:139:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2622:391:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2668:83:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2670:77:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2670:79:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2670:79:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2643:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2652:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2639:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2639:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2664:2:24",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2635:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2635:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "2632:119:24"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2761:117:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2776:15:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2790:1:24",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2780:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2805:63:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2840:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2851:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2836:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2836:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2860:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2815:20:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2815:53:24"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2805:6:24"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2888:118:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2903:16:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2917:2:24",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2907:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2933:63:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2968:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2979:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2964:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2964:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2988:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2943:20:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2943:53:24"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2933:6:24"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2584:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2595:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2607:6:24",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2615:6:24",
                "type": ""
              }
            ],
            "src": "2539:474:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3061:48:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3071:32:24",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3096:5:24"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3089:6:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3089:13:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3082:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3082:21:24"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3071:7:24"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3043:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3053:7:24",
                "type": ""
              }
            ],
            "src": "3019:90:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3174:50:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3191:3:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3211:5:24"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3196:14:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3196:21:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3184:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3184:34:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3184:34:24"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3162:5:24",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3169:3:24",
                "type": ""
              }
            ],
            "src": "3115:109:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3322:118:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3332:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3344:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3355:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3340:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3340:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3332:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3406:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3419:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3430:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3415:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3415:17:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3368:37:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3368:65:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3368:65:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3294:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3306:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3317:4:24",
                "type": ""
              }
            ],
            "src": "3230:210:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3511:53:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3528:3:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3551:5:24"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3533:17:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3533:24:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3521:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3521:37:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3521:37:24"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3499:5:24",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3506:3:24",
                "type": ""
              }
            ],
            "src": "3446:118:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3668:124:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3678:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3690:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3701:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3686:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3686:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3678:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3758:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3771:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3782:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3767:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3767:17:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3714:43:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3714:71:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3714:71:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3640:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3652:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3663:4:24",
                "type": ""
              }
            ],
            "src": "3570:222:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3881:391:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3927:83:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3929:77:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3929:79:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3929:79:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3902:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3911:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3898:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3898:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3923:2:24",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3894:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3894:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "3891:119:24"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4020:117:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4035:15:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4049:1:24",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4039:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4064:63:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4099:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4110:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4095:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4095:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4119:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4074:20:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4074:53:24"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4064:6:24"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4147:118:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4162:16:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4176:2:24",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4166:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4192:63:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4227:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4238:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4223:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4223:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4247:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4202:20:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4202:53:24"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4192:6:24"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3843:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3854:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3866:6:24",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3874:6:24",
                "type": ""
              }
            ],
            "src": "3798:474:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4378:519:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4424:83:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4426:77:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4426:79:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4426:79:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4399:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4408:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4395:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4395:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4420:2:24",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4391:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4391:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "4388:119:24"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4517:117:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4532:15:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4546:1:24",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4536:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4561:63:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4596:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4607:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4592:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4592:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4616:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4571:20:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4571:53:24"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4561:6:24"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4644:118:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4659:16:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4673:2:24",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4663:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4689:63:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4724:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4735:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4720:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4720:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4744:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4699:20:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4699:53:24"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4689:6:24"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4772:118:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4787:16:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4801:2:24",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4791:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4817:63:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4852:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4863:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4848:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4848:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4872:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4827:20:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4827:53:24"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "4817:6:24"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4332:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4343:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4355:6:24",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4363:6:24",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4371:6:24",
                "type": ""
              }
            ],
            "src": "4278:619:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4946:43:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4956:27:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4971:5:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4978:4:24",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4967:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4967:16:24"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4956:7:24"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4928:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4938:7:24",
                "type": ""
              }
            ],
            "src": "4903:86:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5056:51:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5073:3:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5094:5:24"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "5078:15:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5078:22:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5066:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5066:35:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5066:35:24"
                }
              ]
            },
            "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5044:5:24",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5051:3:24",
                "type": ""
              }
            ],
            "src": "4995:112:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5207:120:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5217:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5229:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5240:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5225:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5225:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5217:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5293:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5306:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5317:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5302:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5302:17:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5253:39:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5253:67:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5253:67:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5179:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5191:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5202:4:24",
                "type": ""
              }
            ],
            "src": "5113:214:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5399:263:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5445:83:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5447:77:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5447:79:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5447:79:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5420:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5429:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5416:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5416:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5441:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5412:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5412:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "5409:119:24"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5538:117:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5553:15:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5567:1:24",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5557:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5582:63:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5617:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5628:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5613:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5613:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5637:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5592:20:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5592:53:24"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5582:6:24"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5369:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5380:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5392:6:24",
                "type": ""
              }
            ],
            "src": "5333:329:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5734:263:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5780:83:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5782:77:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5782:79:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5782:79:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5755:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5764:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5751:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5751:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5776:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5747:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5747:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "5744:119:24"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5873:117:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5888:15:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5902:1:24",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5892:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5917:63:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5952:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5963:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5948:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5948:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5972:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5927:20:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5927:53:24"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5917:6:24"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5704:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5715:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5727:6:24",
                "type": ""
              }
            ],
            "src": "5668:329:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6068:53:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6085:3:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6108:5:24"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6090:17:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6090:24:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6078:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6078:37:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6078:37:24"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6056:5:24",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6063:3:24",
                "type": ""
              }
            ],
            "src": "6003:118:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6225:124:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6235:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6247:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6258:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6243:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6243:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6235:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6315:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6328:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6339:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6324:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6324:17:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6271:43:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6271:71:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6271:71:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6197:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6209:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6220:4:24",
                "type": ""
              }
            ],
            "src": "6127:222:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6438:391:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6484:83:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6486:77:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6486:79:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6486:79:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6459:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6468:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6455:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6455:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6480:2:24",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6451:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6451:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "6448:119:24"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6577:117:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6592:15:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6606:1:24",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6596:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6621:63:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6656:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6667:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6652:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6652:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6676:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6631:20:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6631:53:24"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6621:6:24"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6704:118:24",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6719:16:24",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6733:2:24",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6723:6:24",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6749:63:24",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6784:9:24"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6795:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6780:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6780:22:24"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6804:7:24"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6759:20:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6759:53:24"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "6749:6:24"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6400:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6411:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6423:6:24",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6431:6:24",
                "type": ""
              }
            ],
            "src": "6355:474:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6863:152:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6880:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6883:77:24",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6873:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6873:88:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6873:88:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6977:1:24",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6980:4:24",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6970:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6970:15:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6970:15:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7001:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7004:4:24",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6994:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6994:15:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6994:15:24"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "6835:180:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7072:269:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7082:22:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7096:4:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7102:1:24",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "7092:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7092:12:24"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7082:6:24"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7113:38:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7143:4:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7149:1:24",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7139:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7139:12:24"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "7117:18:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7190:51:24",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7204:27:24",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "7218:6:24"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7226:4:24",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "7214:3:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7214:17:24"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7204:6:24"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7170:18:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7163:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7163:26:24"
                  },
                  "nodeType": "YulIf",
                  "src": "7160:81:24"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7293:42:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "7307:16:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7307:18:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7307:18:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7257:18:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7280:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7288:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7277:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7277:14:24"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7254:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7254:38:24"
                  },
                  "nodeType": "YulIf",
                  "src": "7251:84:24"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "7056:4:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7065:6:24",
                "type": ""
              }
            ],
            "src": "7021:320:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7375:152:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7392:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7395:77:24",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7385:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7385:88:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7385:88:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7489:1:24",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7492:4:24",
                        "type": "",
                        "value": "0x01"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7482:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7482:15:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7482:15:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7513:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7516:4:24",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7506:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7506:15:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7506:15:24"
                }
              ]
            },
            "name": "panic_error_0x01",
            "nodeType": "YulFunctionDefinition",
            "src": "7347:180:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7561:152:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7578:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7581:77:24",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7571:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7571:88:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7571:88:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7675:1:24",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7678:4:24",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7668:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7668:15:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7668:15:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7699:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7702:4:24",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7692:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7692:15:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7692:15:24"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "7533:180:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7767:362:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7777:25:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7800:1:24"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7782:17:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7782:20:24"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7777:1:24"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7811:25:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7834:1:24"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7816:17:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7816:20:24"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7811:1:24"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7845:28:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7868:1:24"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7871:1:24"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "7864:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7864:9:24"
                  },
                  "variables": [
                    {
                      "name": "product_raw",
                      "nodeType": "YulTypedName",
                      "src": "7849:11:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7882:41:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "product_raw",
                        "nodeType": "YulIdentifier",
                        "src": "7911:11:24"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7893:17:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7893:30:24"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "7882:7:24"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8100:22:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8102:16:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8102:18:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8102:18:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "8033:1:24"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8026:6:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8026:9:24"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "8056:1:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "8063:7:24"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "8072:1:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "8059:3:24"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8059:15:24"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "8053:2:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8053:22:24"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "8006:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8006:83:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7986:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7986:113:24"
                  },
                  "nodeType": "YulIf",
                  "src": "7983:139:24"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7750:1:24",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7753:1:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "7759:7:24",
                "type": ""
              }
            ],
            "src": "7719:410:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8289:288:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8299:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8311:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8322:2:24",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8307:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8307:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8299:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8379:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8392:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8403:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8388:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8388:17:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8335:43:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8335:71:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8335:71:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8460:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8473:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8484:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8469:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8469:18:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8416:43:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8416:72:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8416:72:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8542:6:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8555:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8566:2:24",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8551:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8551:18:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8498:43:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8498:72:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8498:72:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8245:9:24",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8257:6:24",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8265:6:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8273:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8284:4:24",
                "type": ""
              }
            ],
            "src": "8135:442:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8627:147:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8637:25:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8660:1:24"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8642:17:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8642:20:24"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "8637:1:24"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8671:25:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8694:1:24"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8676:17:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8676:20:24"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "8671:1:24"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8705:16:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8716:1:24"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8719:1:24"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8712:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8712:9:24"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "8705:3:24"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8745:22:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8747:16:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8747:18:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8747:18:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8737:1:24"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "8740:3:24"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8734:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8734:10:24"
                  },
                  "nodeType": "YulIf",
                  "src": "8731:36:24"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8614:1:24",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8617:1:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "8623:3:24",
                "type": ""
              }
            ],
            "src": "8583:191:24"
          }
        ]
      },
      "contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
      "id": 24,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
<<<<<<< HEAD
  "sourceMap": "454:2358:23:-:0;;;662:1;629:34;;757:1;714:45;;;;;;;;;;;;;;;;;;;;1614:131;;;;;;;;;;1663:10;1945:116:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:5;2012;:13;;;;;;:::i;:::-;;2046:7;2036;:17;;;;;;:::i;:::-;;1945:116;;1335:1:0;1311:26;;:12;:26;;;1307:97;;1389:1;1361:31;;;;;;;;;;;:::i;:::-;;;;;;;;1307:97;1414:32;1433:12;1414:18;;;:32;;:::i;:::-;1262:192;1723:10:23::2;1707:13;;:26;;;;;;;;;;;;;;;;;;454:2358:::0;;3006:191:0;3080:16;3099:6;;;;;;;;;;;3080:25;;3125:8;3116:6;;:17;;;;;;;;;;;;;;;;;;3180:8;3149:40;;3170:8;3149:40;;;;;;;;;;;;3069:128;3006:191;:::o;7:99:24:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;454:2358:23:-;;;;;;;",
  "deployedSourceMap": "454:2358:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2131:91:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4424:190;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3233:99;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2641:170:23;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5192:249:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3084:84;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2275:130:23;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3395:118:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2368:103:0;;;;;;;;;;;;;:::i;:::-;;1693:87;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2341:95:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:182;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2417:112:23;;;:::i;:::-;;3963:142:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1878:130:23;;;;;;;;;;;;;:::i;:::-;;2626:220:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2131:91:6;2176:13;2209:5;2202:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2131:91;:::o;4424:190::-;4497:4;4514:13;4530:12;:10;:12::i;:::-;4514:28;;4553:31;4562:5;4569:7;4578:5;4553:8;:31::i;:::-;4602:4;4595:11;;;4424:190;;;;:::o;3233:99::-;3285:7;3312:12;;3305:19;;3233:99;:::o;2641:170:23:-;1240:1;1211:31;;:16;;;;;;;;;;;:31;;;1204:39;;;;:::i;:::-;;1427:16:::1;;;;;;;;;;;1413:30;;:10;:30;;;1405:39;;;::::0;::::1;;2760::::2;2766:7;2783:14;;2775:5;:22;;;;:::i;:::-;2760:5;:39::i;:::-;2641:170:::0;;:::o;5192:249:6:-;5279:4;5296:15;5314:12;:10;:12::i;:::-;5296:30;;5337:37;5353:4;5359:7;5368:5;5337:15;:37::i;:::-;5385:26;5395:4;5401:2;5405:5;5385:9;:26::i;:::-;5429:4;5422:11;;;5192:249;;;;;:::o;3084:84::-;3133:5;3158:2;3151:9;;3084:84;:::o;2275:130:23:-;1240:1;1211:31;;:16;;;;;;;;;;;:31;;;1204:39;;;;:::i;:::-;;2360:33:::1;2368:16;;;;;;;;;;;2385:7;2360;:33::i;:::-;;2275:130:::0;:::o;3395:118:6:-;3460:7;3487:9;:18;3497:7;3487:18;;;;;;;;;;;;;;;;3480:25;;3395:118;;;:::o;2368:103:0:-;1579:13;:11;:13::i;:::-;2433:30:::1;2460:1;2433:18;:30::i;:::-;2368:103::o:0;1693:87::-;1739:7;1766:6;;;;;;;;;;;1759:13;;1693:87;:::o;2341:95:6:-;2388:13;2421:7;2414:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2341:95;:::o;3718:182::-;3787:4;3804:13;3820:12;:10;:12::i;:::-;3804:28;;3843:27;3853:5;3860:2;3864:5;3843:9;:27::i;:::-;3888:4;3881:11;;;3718:182;;;;:::o;2417:112:23:-;2471:46;2477:10;2501:14;;2489:9;:26;;;;:::i;:::-;2471:5;:46::i;:::-;2417:112::o;3963:142:6:-;4043:7;4070:11;:18;4082:5;4070:18;;;;;;;;;;;;;;;:27;4089:7;4070:27;;;;;;;;;;;;;;;;4063:34;;3963:142;;;;:::o;1878:130:23:-;1055:1;1026:31;;:16;;;;;;;;;;;:31;;;1019:39;;;;:::i;:::-;;1986:10:::1;1967:16;;:29;;;;;;;;;;;;;;;;;;1878:130::o:0;2626:220:0:-;1579:13;:11;:13::i;:::-;2731:1:::1;2711:22;;:8;:22;;::::0;2707:93:::1;;2785:1;2757:31;;;;;;;;;;;:::i;:::-;;;;;;;;2707:93;2810:28;2829:8;2810:18;:28::i;:::-;2626:220:::0;:::o;672:98:14:-;725:7;752:10;745:17;;672:98;:::o;9251:130:6:-;9336:37;9345:5;9352:7;9361:5;9368:4;9336:8;:37::i;:::-;9251:130;;;:::o;7946:213::-;8036:1;8017:21;;:7;:21;;;8013:93;;8091:1;8062:32;;;;;;;;;;;:::i;:::-;;;;;;;;8013:93;8116:35;8132:1;8136:7;8145:5;8116:7;:35::i;:::-;7946:213;;:::o;10967:487::-;11067:24;11094:25;11104:5;11111:7;11094:9;:25::i;:::-;11067:52;;11154:17;11134:16;:37;11130:317;;11211:5;11192:16;:24;11188:132;;;11271:7;11280:16;11298:5;11244:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;11188:132;11363:57;11372:5;11379:7;11407:5;11388:16;:24;11414:5;11363:8;:57::i;:::-;11130:317;11056:398;10967:487;;;:::o;5826:308::-;5926:1;5910:18;;:4;:18;;;5906:88;;5979:1;5952:30;;;;;;;;;;;:::i;:::-;;;;;;;;5906:88;6022:1;6008:16;;:2;:16;;;6004:88;;6077:1;6048:32;;;;;;;;;;;:::i;:::-;;;;;;;;6004:88;6102:24;6110:4;6116:2;6120:5;6102:7;:24::i;:::-;5826:308;;;:::o;1858:166:0:-;1929:12;:10;:12::i;:::-;1918:23;;:7;:5;:7::i;:::-;:23;;;1914:103;;1992:12;:10;:12::i;:::-;1965:40;;;;;;;;;;;:::i;:::-;;;;;;;;1914:103;1858:166::o;3006:191::-;3080:16;3099:6;;;;;;;;;;;3080:25;;3125:8;3116:6;;:17;;;;;;;;;;;;;;;;;;3180:8;3149:40;;3170:8;3149:40;;;;;;;;;;;;3069:128;3006:191;:::o;10232:443:6:-;10362:1;10345:19;;:5;:19;;;10341:91;;10417:1;10388:32;;;;;;;;;;;:::i;:::-;;;;;;;;10341:91;10465:1;10446:21;;:7;:21;;;10442:92;;10519:1;10491:31;;;;;;;;;;;:::i;:::-;;;;;;;;10442:92;10574:5;10544:11;:18;10556:5;10544:18;;;;;;;;;;;;;;;:27;10563:7;10544:27;;;;;;;;;;;;;;;:35;;;;10594:9;10590:78;;;10641:7;10625:31;;10634:5;10625:31;;;10650:5;10625:31;;;;;;:::i;:::-;;;;;;;;10590:78;10232:443;;;;:::o;6458:1135::-;6564:1;6548:18;;:4;:18;;;6544:552;;6702:5;6686:12;;:21;;;;;;;:::i;:::-;;;;;;;;6544:552;;;6740:19;6762:9;:15;6772:4;6762:15;;;;;;;;;;;;;;;;6740:37;;6810:5;6796:11;:19;6792:117;;;6868:4;6874:11;6887:5;6843:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6792:117;7064:5;7050:11;:19;7032:9;:15;7042:4;7032:15;;;;;;;;;;;;;;;:37;;;;6725:371;6544:552;7126:1;7112:16;;:2;:16;;;7108:435;;7294:5;7278:12;;:21;;;;;;;;;;;7108:435;;;7511:5;7494:9;:13;7504:2;7494:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;7108:435;7575:2;7560:25;;7569:4;7560:25;;;7579:5;7560:25;;;;;;:::i;:::-;;;;;;;;6458:1135;;;:::o;7:99:24:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:474::-;3866:6;3874;3923:2;3911:9;3902:7;3898:23;3894:32;3891:119;;;3929:79;;:::i;:::-;3891:119;4049:1;4074:53;4119:7;4110:6;4099:9;4095:22;4074:53;:::i;:::-;4064:63;;4020:117;4176:2;4202:53;4247:7;4238:6;4227:9;4223:22;4202:53;:::i;:::-;4192:63;;4147:118;3798:474;;;;;:::o;4278:619::-;4355:6;4363;4371;4420:2;4408:9;4399:7;4395:23;4391:32;4388:119;;;4426:79;;:::i;:::-;4388:119;4546:1;4571:53;4616:7;4607:6;4596:9;4592:22;4571:53;:::i;:::-;4561:63;;4517:117;4673:2;4699:53;4744:7;4735:6;4724:9;4720:22;4699:53;:::i;:::-;4689:63;;4644:118;4801:2;4827:53;4872:7;4863:6;4852:9;4848:22;4827:53;:::i;:::-;4817:63;;4772:118;4278:619;;;;;:::o;4903:86::-;4938:7;4978:4;4971:5;4967:16;4956:27;;4903:86;;;:::o;4995:112::-;5078:22;5094:5;5078:22;:::i;:::-;5073:3;5066:35;4995:112;;:::o;5113:214::-;5202:4;5240:2;5229:9;5225:18;5217:26;;5253:67;5317:1;5306:9;5302:17;5293:6;5253:67;:::i;:::-;5113:214;;;;:::o;5333:329::-;5392:6;5441:2;5429:9;5420:7;5416:23;5412:32;5409:119;;;5447:79;;:::i;:::-;5409:119;5567:1;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5538:117;5333:329;;;;:::o;5668:::-;5727:6;5776:2;5764:9;5755:7;5751:23;5747:32;5744:119;;;5782:79;;:::i;:::-;5744:119;5902:1;5927:53;5972:7;5963:6;5952:9;5948:22;5927:53;:::i;:::-;5917:63;;5873:117;5668:329;;;;:::o;6003:118::-;6090:24;6108:5;6090:24;:::i;:::-;6085:3;6078:37;6003:118;;:::o;6127:222::-;6220:4;6258:2;6247:9;6243:18;6235:26;;6271:71;6339:1;6328:9;6324:17;6315:6;6271:71;:::i;:::-;6127:222;;;;:::o;6355:474::-;6423:6;6431;6480:2;6468:9;6459:7;6455:23;6451:32;6448:119;;;6486:79;;:::i;:::-;6448:119;6606:1;6631:53;6676:7;6667:6;6656:9;6652:22;6631:53;:::i;:::-;6621:63;;6577:117;6733:2;6759:53;6804:7;6795:6;6784:9;6780:22;6759:53;:::i;:::-;6749:63;;6704:118;6355:474;;;;;:::o;6835:180::-;6883:77;6880:1;6873:88;6980:4;6977:1;6970:15;7004:4;7001:1;6994:15;7021:320;7065:6;7102:1;7096:4;7092:12;7082:22;;7149:1;7143:4;7139:12;7170:18;7160:81;;7226:4;7218:6;7214:17;7204:27;;7160:81;7288:2;7280:6;7277:14;7257:18;7254:38;7251:84;;7307:18;;:::i;:::-;7251:84;7072:269;7021:320;;;:::o;7347:180::-;7395:77;7392:1;7385:88;7492:4;7489:1;7482:15;7516:4;7513:1;7506:15;7533:180;7581:77;7578:1;7571:88;7678:4;7675:1;7668:15;7702:4;7699:1;7692:15;7719:410;7759:7;7782:20;7800:1;7782:20;:::i;:::-;7777:25;;7816:20;7834:1;7816:20;:::i;:::-;7811:25;;7871:1;7868;7864:9;7893:30;7911:11;7893:30;:::i;:::-;7882:41;;8072:1;8063:7;8059:15;8056:1;8053:22;8033:1;8026:9;8006:83;7983:139;;8102:18;;:::i;:::-;7983:139;7767:362;7719:410;;;;:::o;8135:442::-;8284:4;8322:2;8311:9;8307:18;8299:26;;8335:71;8403:1;8392:9;8388:17;8379:6;8335:71;:::i;:::-;8416:72;8484:2;8473:9;8469:18;8460:6;8416:72;:::i;:::-;8498;8566:2;8555:9;8551:18;8542:6;8498:72;:::i;:::-;8135:442;;;;;;:::o;8583:191::-;8623:3;8642:20;8660:1;8642:20;:::i;:::-;8637:25;;8676:20;8694:1;8676:20;:::i;:::-;8671:25;;8719:1;8716;8712:9;8705:16;;8740:3;8737:1;8734:10;8731:36;;;8747:18;;:::i;:::-;8731:36;8583:191;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\n/*\r\nWarning when testing code\r\nSince transactions have to be approved within the contract they are created in\r\n(So like approving a erc20 transaction must be done in an erc20 contract)\r\nBefore doing a transaction please approve it in the respective contract\r\n*/\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n   \r\n\r\n\r\ncontract RentToken is ERC20, Ownable {\r\n    //Data-------------------------------------------------------------------------------------------------------------------\r\n        uint    private tokens_per_wei = 1;\r\n        address private contractOwner;\r\n        address private BuildingContract = address(0);\r\n\r\n    //Modifiers-------------------------------------------------------------------------------------------------------------------\r\n        //Checks if BuildingContract has not been filled out\r\n        modifier NullBuildingContractAddress(){\r\n            assert(BuildingContract ==  address(0));\r\n            _;\r\n        }\r\n        //Checks if BuildingContract has been filled out\r\n        modifier MustHaveBuildingContract(){\r\n            assert(BuildingContract !=  address(0));\r\n            _;\r\n        }\r\n        \r\n        //Checks if only the buildingContract is calling the function\r\n        modifier OnlyBuildingToken(){\r\n            require(msg.sender == BuildingContract);\r\n            _;\r\n        }\r\n    //Functions-------------------------------------------------------------------------------------------------------------------\r\n        constructor() ERC20(\"RoomToken\", \"ReTK\") Ownable(msg.sender)\r\n        {        \r\n            contractOwner = msg.sender;\r\n        }\r\n\r\n        //Is called upon creation of BuildingTokenContract and will automatically set BuildingContract when that occurs\r\n        function setBuildingContractAddress() external NullBuildingContractAddress{\r\n            BuildingContract = msg.sender;\r\n        }\r\n\r\n        //This should be the only function called within the erc20 contract (Since apparently you cant approve things from different contracts\r\n        //This will basically just approve a certain amount for a transaction sent from the Building Contract\r\n        function requestApproval(uint _amount) public MustHaveBuildingContract{\r\n            approve(BuildingContract,_amount);\r\n        }\r\n\r\n        function BuyRentTokens() payable public{\r\n            _mint(msg.sender,(msg.value * tokens_per_wei));\r\n        }\r\n\r\n        //This is called in the ERC1155 contract and will allow anyone to buy Rent Tokens to trade\r\n        function buyRentTokens(uint value, address _sender) external MustHaveBuildingContract OnlyBuildingToken {\r\n            _mint(_sender,(value * tokens_per_wei));\r\n        }}\r\n\r\n\r\n",
  "sourcePath": "C:\\Users\\matth\\UB\\Fall2023\\landlord-tenant-project\\contract-folder\\contracts\\RentToken.sol",
=======
  "sourceMap": "454:2386:23:-:0;;;662:1;629:34;;757:1;714:45;;;;;;;;;;;;;;;;;;;;1614:131;;;;;;;;;;1663:10;1945:116:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:5;2012;:13;;;;;;:::i;:::-;;2046:7;2036;:17;;;;;;:::i;:::-;;1945:116;;1335:1:0;1311:26;;:12;:26;;;1307:97;;1389:1;1361:31;;;;;;;;;;;:::i;:::-;;;;;;;;1307:97;1414:32;1433:12;1414:18;;;:32;;:::i;:::-;1262:192;1723:10:23::2;1707:13;;:26;;;;;;;;;;;;;;;;;;454:2386:::0;;3006:191:0;3080:16;3099:6;;;;;;;;;;;3080:25;;3125:8;3116:6;;:17;;;;;;;;;;;;;;;;;;3180:8;3149:40;;3170:8;3149:40;;;;;;;;;;;;3069:128;3006:191;:::o;7:99:24:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;454:2386:23:-;;;;;;;",
  "deployedSourceMap": "454:2386:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2131:91:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4424:190;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3233:99;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2517:170:23;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5192:249:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3084:84;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2275:130:23;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3395:118:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2368:103:0;;;;;;;;;;;;;:::i;:::-;;1693:87;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2341:95:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:182;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:112:23;;;:::i;:::-;;3963:142:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1878:130:23;;;;;;;;;;;;;:::i;:::-;;2626:220:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2131:91:6;2176:13;2209:5;2202:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2131:91;:::o;4424:190::-;4497:4;4514:13;4530:12;:10;:12::i;:::-;4514:28;;4553:31;4562:5;4569:7;4578:5;4553:8;:31::i;:::-;4602:4;4595:11;;;4424:190;;;;:::o;3233:99::-;3285:7;3312:12;;3305:19;;3233:99;:::o;2517:170:23:-;1240:1;1211:31;;:16;;;;;;;;;;;:31;;;1204:39;;;;:::i;:::-;;1427:16:::1;;;;;;;;;;;1413:30;;:10;:30;;;1405:39;;;::::0;::::1;;2636::::2;2642:7;2659:14;;2651:5;:22;;;;:::i;:::-;2636:5;:39::i;:::-;2517:170:::0;;:::o;5192:249:6:-;5279:4;5296:15;5314:12;:10;:12::i;:::-;5296:30;;5337:37;5353:4;5359:7;5368:5;5337:15;:37::i;:::-;5385:26;5395:4;5401:2;5405:5;5385:9;:26::i;:::-;5429:4;5422:11;;;5192:249;;;;;:::o;3084:84::-;3133:5;3158:2;3151:9;;3084:84;:::o;2275:130:23:-;1240:1;1211:31;;:16;;;;;;;;;;;:31;;;1204:39;;;;:::i;:::-;;2360:33:::1;2368:16;;;;;;;;;;;2385:7;2360;:33::i;:::-;;2275:130:::0;:::o;3395:118:6:-;3460:7;3487:9;:18;3497:7;3487:18;;;;;;;;;;;;;;;;3480:25;;3395:118;;;:::o;2368:103:0:-;1579:13;:11;:13::i;:::-;2433:30:::1;2460:1;2433:18;:30::i;:::-;2368:103::o:0;1693:87::-;1739:7;1766:6;;;;;;;;;;;1759:13;;1693:87;:::o;2341:95:6:-;2388:13;2421:7;2414:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2341:95;:::o;3718:182::-;3787:4;3804:13;3820:12;:10;:12::i;:::-;3804:28;;3843:27;3853:5;3860:2;3864:5;3843:9;:27::i;:::-;3888:4;3881:11;;;3718:182;;;;:::o;2707:112:23:-;2761:46;2767:10;2791:14;;2779:9;:26;;;;:::i;:::-;2761:5;:46::i;:::-;2707:112::o;3963:142:6:-;4043:7;4070:11;:18;4082:5;4070:18;;;;;;;;;;;;;;;:27;4089:7;4070:27;;;;;;;;;;;;;;;;4063:34;;3963:142;;;;:::o;1878:130:23:-;1055:1;1026:31;;:16;;;;;;;;;;;:31;;;1019:39;;;;:::i;:::-;;1986:10:::1;1967:16;;:29;;;;;;;;;;;;;;;;;;1878:130::o:0;2626:220:0:-;1579:13;:11;:13::i;:::-;2731:1:::1;2711:22;;:8;:22;;::::0;2707:93:::1;;2785:1;2757:31;;;;;;;;;;;:::i;:::-;;;;;;;;2707:93;2810:28;2829:8;2810:18;:28::i;:::-;2626:220:::0;:::o;672:98:14:-;725:7;752:10;745:17;;672:98;:::o;9251:130:6:-;9336:37;9345:5;9352:7;9361:5;9368:4;9336:8;:37::i;:::-;9251:130;;;:::o;7946:213::-;8036:1;8017:21;;:7;:21;;;8013:93;;8091:1;8062:32;;;;;;;;;;;:::i;:::-;;;;;;;;8013:93;8116:35;8132:1;8136:7;8145:5;8116:7;:35::i;:::-;7946:213;;:::o;10967:487::-;11067:24;11094:25;11104:5;11111:7;11094:9;:25::i;:::-;11067:52;;11154:17;11134:16;:37;11130:317;;11211:5;11192:16;:24;11188:132;;;11271:7;11280:16;11298:5;11244:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;11188:132;11363:57;11372:5;11379:7;11407:5;11388:16;:24;11414:5;11363:8;:57::i;:::-;11130:317;11056:398;10967:487;;;:::o;5826:308::-;5926:1;5910:18;;:4;:18;;;5906:88;;5979:1;5952:30;;;;;;;;;;;:::i;:::-;;;;;;;;5906:88;6022:1;6008:16;;:2;:16;;;6004:88;;6077:1;6048:32;;;;;;;;;;;:::i;:::-;;;;;;;;6004:88;6102:24;6110:4;6116:2;6120:5;6102:7;:24::i;:::-;5826:308;;;:::o;1858:166:0:-;1929:12;:10;:12::i;:::-;1918:23;;:7;:5;:7::i;:::-;:23;;;1914:103;;1992:12;:10;:12::i;:::-;1965:40;;;;;;;;;;;:::i;:::-;;;;;;;;1914:103;1858:166::o;3006:191::-;3080:16;3099:6;;;;;;;;;;;3080:25;;3125:8;3116:6;;:17;;;;;;;;;;;;;;;;;;3180:8;3149:40;;3170:8;3149:40;;;;;;;;;;;;3069:128;3006:191;:::o;10232:443:6:-;10362:1;10345:19;;:5;:19;;;10341:91;;10417:1;10388:32;;;;;;;;;;;:::i;:::-;;;;;;;;10341:91;10465:1;10446:21;;:7;:21;;;10442:92;;10519:1;10491:31;;;;;;;;;;;:::i;:::-;;;;;;;;10442:92;10574:5;10544:11;:18;10556:5;10544:18;;;;;;;;;;;;;;;:27;10563:7;10544:27;;;;;;;;;;;;;;;:35;;;;10594:9;10590:78;;;10641:7;10625:31;;10634:5;10625:31;;;10650:5;10625:31;;;;;;:::i;:::-;;;;;;;;10590:78;10232:443;;;;:::o;6458:1135::-;6564:1;6548:18;;:4;:18;;;6544:552;;6702:5;6686:12;;:21;;;;;;;:::i;:::-;;;;;;;;6544:552;;;6740:19;6762:9;:15;6772:4;6762:15;;;;;;;;;;;;;;;;6740:37;;6810:5;6796:11;:19;6792:117;;;6868:4;6874:11;6887:5;6843:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6792:117;7064:5;7050:11;:19;7032:9;:15;7042:4;7032:15;;;;;;;;;;;;;;;:37;;;;6725:371;6544:552;7126:1;7112:16;;:2;:16;;;7108:435;;7294:5;7278:12;;:21;;;;;;;;;;;7108:435;;;7511:5;7494:9;:13;7504:2;7494:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;7108:435;7575:2;7560:25;;7569:4;7560:25;;;7579:5;7560:25;;;;;;:::i;:::-;;;;;;;;6458:1135;;;:::o;7:99:24:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:474::-;3866:6;3874;3923:2;3911:9;3902:7;3898:23;3894:32;3891:119;;;3929:79;;:::i;:::-;3891:119;4049:1;4074:53;4119:7;4110:6;4099:9;4095:22;4074:53;:::i;:::-;4064:63;;4020:117;4176:2;4202:53;4247:7;4238:6;4227:9;4223:22;4202:53;:::i;:::-;4192:63;;4147:118;3798:474;;;;;:::o;4278:619::-;4355:6;4363;4371;4420:2;4408:9;4399:7;4395:23;4391:32;4388:119;;;4426:79;;:::i;:::-;4388:119;4546:1;4571:53;4616:7;4607:6;4596:9;4592:22;4571:53;:::i;:::-;4561:63;;4517:117;4673:2;4699:53;4744:7;4735:6;4724:9;4720:22;4699:53;:::i;:::-;4689:63;;4644:118;4801:2;4827:53;4872:7;4863:6;4852:9;4848:22;4827:53;:::i;:::-;4817:63;;4772:118;4278:619;;;;;:::o;4903:86::-;4938:7;4978:4;4971:5;4967:16;4956:27;;4903:86;;;:::o;4995:112::-;5078:22;5094:5;5078:22;:::i;:::-;5073:3;5066:35;4995:112;;:::o;5113:214::-;5202:4;5240:2;5229:9;5225:18;5217:26;;5253:67;5317:1;5306:9;5302:17;5293:6;5253:67;:::i;:::-;5113:214;;;;:::o;5333:329::-;5392:6;5441:2;5429:9;5420:7;5416:23;5412:32;5409:119;;;5447:79;;:::i;:::-;5409:119;5567:1;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5538:117;5333:329;;;;:::o;5668:::-;5727:6;5776:2;5764:9;5755:7;5751:23;5747:32;5744:119;;;5782:79;;:::i;:::-;5744:119;5902:1;5927:53;5972:7;5963:6;5952:9;5948:22;5927:53;:::i;:::-;5917:63;;5873:117;5668:329;;;;:::o;6003:118::-;6090:24;6108:5;6090:24;:::i;:::-;6085:3;6078:37;6003:118;;:::o;6127:222::-;6220:4;6258:2;6247:9;6243:18;6235:26;;6271:71;6339:1;6328:9;6324:17;6315:6;6271:71;:::i;:::-;6127:222;;;;:::o;6355:474::-;6423:6;6431;6480:2;6468:9;6459:7;6455:23;6451:32;6448:119;;;6486:79;;:::i;:::-;6448:119;6606:1;6631:53;6676:7;6667:6;6656:9;6652:22;6631:53;:::i;:::-;6621:63;;6577:117;6733:2;6759:53;6804:7;6795:6;6784:9;6780:22;6759:53;:::i;:::-;6749:63;;6704:118;6355:474;;;;;:::o;6835:180::-;6883:77;6880:1;6873:88;6980:4;6977:1;6970:15;7004:4;7001:1;6994:15;7021:320;7065:6;7102:1;7096:4;7092:12;7082:22;;7149:1;7143:4;7139:12;7170:18;7160:81;;7226:4;7218:6;7214:17;7204:27;;7160:81;7288:2;7280:6;7277:14;7257:18;7254:38;7251:84;;7307:18;;:::i;:::-;7251:84;7072:269;7021:320;;;:::o;7347:180::-;7395:77;7392:1;7385:88;7492:4;7489:1;7482:15;7516:4;7513:1;7506:15;7533:180;7581:77;7578:1;7571:88;7678:4;7675:1;7668:15;7702:4;7699:1;7692:15;7719:410;7759:7;7782:20;7800:1;7782:20;:::i;:::-;7777:25;;7816:20;7834:1;7816:20;:::i;:::-;7811:25;;7871:1;7868;7864:9;7893:30;7911:11;7893:30;:::i;:::-;7882:41;;8072:1;8063:7;8059:15;8056:1;8053:22;8033:1;8026:9;8006:83;7983:139;;8102:18;;:::i;:::-;7983:139;7767:362;7719:410;;;;:::o;8135:442::-;8284:4;8322:2;8311:9;8307:18;8299:26;;8335:71;8403:1;8392:9;8388:17;8379:6;8335:71;:::i;:::-;8416:72;8484:2;8473:9;8469:18;8460:6;8416:72;:::i;:::-;8498;8566:2;8555:9;8551:18;8542:6;8498:72;:::i;:::-;8135:442;;;;;;:::o;8583:191::-;8623:3;8642:20;8660:1;8642:20;:::i;:::-;8637:25;;8676:20;8694:1;8676:20;:::i;:::-;8671:25;;8719:1;8716;8712:9;8705:16;;8740:3;8737:1;8734:10;8731:36;;;8747:18;;:::i;:::-;8731:36;8583:191;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\n/*\r\nWarning when testing code\r\nSince transactions have to be approved within the contract they are created in\r\n(So like approving a erc20 transaction must be done in an erc20 contract)\r\nBefore doing a transaction please approve it in the respective contract\r\n*/\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n   \r\n\r\n\r\ncontract RentToken is ERC20, Ownable {\r\n    //Data-------------------------------------------------------------------------------------------------------------------\r\n        uint    private tokens_per_wei = 1;\r\n        address private contractOwner;\r\n        address private BuildingContract = address(0);\r\n\r\n    //Modifiers-------------------------------------------------------------------------------------------------------------------\r\n        //Checks if BuildingContract has not been filled out\r\n        modifier NullBuildingContractAddress(){\r\n            assert(BuildingContract ==  address(0));\r\n            _;\r\n        }\r\n        //Checks if BuildingContract has been filled out\r\n        modifier MustHaveBuildingContract(){\r\n            assert(BuildingContract !=  address(0));\r\n            _;\r\n        }\r\n        \r\n        //Checks if only the buildingContract is calling the function\r\n        modifier OnlyBuildingToken(){\r\n            require(msg.sender == BuildingContract);\r\n            _;\r\n        }\r\n    //Functions-------------------------------------------------------------------------------------------------------------------\r\n        constructor() ERC20(\"RoomToken\", \"ReTK\") Ownable(msg.sender)\r\n        {        \r\n            contractOwner = msg.sender;\r\n        }\r\n\r\n        //Is called upon creation of BuildingTokenContract and will automatically set BuildingContract when that occurs\r\n        function setBuildingContractAddress() external NullBuildingContractAddress{\r\n            BuildingContract = msg.sender;\r\n        }\r\n\r\n        //This should be the only function called within the erc20 contract (Since apparently you cant approve things from different contracts\r\n        //This will basically just approve a certain amount for a transaction sent from the Building Contract\r\n        function requestApproval(uint _amount) public MustHaveBuildingContract{\r\n            approve(BuildingContract,_amount);\r\n        }\r\n\r\n        //This is called in the ERC1155 contract and will allow anyone to buy Rent Tokens to trade\r\n        function buyRentTokens(uint value, address _sender) external MustHaveBuildingContract OnlyBuildingToken {\r\n            _mint(_sender,(value * tokens_per_wei));\r\n        }\r\n        \r\n        function BuyRentTokens() payable public{\r\n            _mint(msg.sender,(msg.value * tokens_per_wei));\r\n        }\r\n        \r\n        }\r\n\r\n        \r\n",
  "sourcePath": "C:\\Users\\kumko\\OneDrive\\Desktop\\landlord-tenant-project\\contract-folder\\contracts\\RentToken.sol",
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
  "ast": {
    "absolutePath": "project:/contracts/RentToken.sol",
    "exportedSymbols": {
      "Context": [
        3512
      ],
      "ERC20": [
        2031
      ],
      "IERC20": [
        2109
      ],
      "IERC20Errors": [
        189
      ],
      "IERC20Metadata": [
        2135
      ],
      "Ownable": [
        147
      ],
      "RentToken": [
        6647
      ]
    },
    "id": 6648,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6517,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "298:32:23"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 6518,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6648,
        "sourceUnit": 148,
        "src": "334:52:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 6519,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6648,
        "sourceUnit": 2032,
        "src": "388:55:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6520,
              "name": "ERC20",
              "nameLocations": [
                "476:5:23"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2031,
              "src": "476:5:23"
            },
            "id": 6521,
            "nodeType": "InheritanceSpecifier",
            "src": "476:5:23"
          },
          {
            "baseName": {
              "id": 6522,
              "name": "Ownable",
              "nameLocations": [
                "483:7:23"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 147,
              "src": "483:7:23"
            },
            "id": 6523,
            "nodeType": "InheritanceSpecifier",
            "src": "483:7:23"
          }
        ],
        "canonicalName": "RentToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6647,
        "linearizedBaseContracts": [
          6647,
          147,
          2031,
          189,
          2135,
          2109,
          3512
        ],
        "name": "RentToken",
        "nameLocation": "463:9:23",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6526,
            "mutability": "mutable",
            "name": "tokens_per_wei",
            "nameLocation": "645:14:23",
            "nodeType": "VariableDeclaration",
            "scope": 6647,
            "src": "629:34:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6524,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "629:4:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 6525,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "662:1:23",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 6528,
            "mutability": "mutable",
            "name": "contractOwner",
            "nameLocation": "690:13:23",
            "nodeType": "VariableDeclaration",
            "scope": 6647,
            "src": "674:29:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6527,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "674:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 6534,
            "mutability": "mutable",
            "name": "BuildingContract",
            "nameLocation": "730:16:23",
            "nodeType": "VariableDeclaration",
            "scope": 6647,
            "src": "714:45:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6529,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "714:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "30",
                  "id": 6532,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "757:1:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "id": 6531,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "749:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 6530,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "749:7:23",
                  "typeDescriptions": {}
                }
              },
              "id": 6533,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "749:10:23",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 6546,
              "nodeType": "Block",
              "src": "1004:82:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6537,
                          "name": "BuildingContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6534,
                          "src": "1026:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1055:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1047:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6538,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1047:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1047:10:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1026:31:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6536,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "1019:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1019:39:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6544,
                  "nodeType": "ExpressionStatement",
                  "src": "1019:39:23"
                },
                {
                  "id": 6545,
                  "nodeType": "PlaceholderStatement",
                  "src": "1073:1:23"
                }
              ]
            },
            "id": 6547,
            "name": "NullBuildingContractAddress",
            "nameLocation": "975:27:23",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 6535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1002:2:23"
            },
            "src": "966:120:23",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6559,
              "nodeType": "Block",
              "src": "1189:82:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6550,
                          "name": "BuildingContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6534,
                          "src": "1211:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1240:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1232:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6551,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1232:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1232:10:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1211:31:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6549,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "1204:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1204:39:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6557,
                  "nodeType": "ExpressionStatement",
                  "src": "1204:39:23"
                },
                {
                  "id": 6558,
                  "nodeType": "PlaceholderStatement",
                  "src": "1258:1:23"
                }
              ]
            },
            "id": 6560,
            "name": "MustHaveBuildingContract",
            "nameLocation": "1163:24:23",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 6548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1187:2:23"
            },
            "src": "1154:117:23",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6570,
              "nodeType": "Block",
              "src": "1390:82:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6563,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1413:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1417:6:23",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1413:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6565,
                          "name": "BuildingContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6534,
                          "src": "1427:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1413:30:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6562,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1405:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1405:39:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6568,
                  "nodeType": "ExpressionStatement",
                  "src": "1405:39:23"
                },
                {
                  "id": 6569,
                  "nodeType": "PlaceholderStatement",
                  "src": "1459:1:23"
                }
              ]
            },
            "id": 6571,
            "name": "OnlyBuildingToken",
            "nameLocation": "1371:17:23",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 6561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1388:2:23"
            },
            "src": "1362:110:23",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6587,
              "nodeType": "Block",
              "src": "1684:61:23",
              "statements": [
                {
                  "expression": {
                    "id": 6585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6582,
                      "name": "contractOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6528,
                      "src": "1707:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 6583,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1723:3:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1727:6:23",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1723:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1707:26:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6586,
                  "nodeType": "ExpressionStatement",
                  "src": "1707:26:23"
                }
              ]
            },
            "id": 6588,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "526f6f6d546f6b656e",
                    "id": 6574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1634:11:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8b83d141779353e625932cea05cb66710adc7928be1653f4e99c3973c0f34192",
                      "typeString": "literal_string \"RoomToken\""
                    },
                    "value": "RoomToken"
                  },
                  {
                    "hexValue": "5265544b",
                    "id": 6575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1647:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5667f739f2bd8568c8caddb053ce5dfcf50585e030528d44cfe8d533d407256f",
                      "typeString": "literal_string \"ReTK\""
                    },
                    "value": "ReTK"
                  }
                ],
                "id": 6576,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 6573,
                  "name": "ERC20",
                  "nameLocations": [
                    "1628:5:23"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2031,
                  "src": "1628:5:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "1628:26:23"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 6578,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1663:3:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 6579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1667:6:23",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1663:10:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 6580,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 6577,
                  "name": "Ownable",
                  "nameLocations": [
                    "1655:7:23"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "1655:7:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "1655:19:23"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1625:2:23"
            },
            "returnParameters": {
              "id": 6581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1684:0:23"
            },
            "scope": 6647,
            "src": "1614:131:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6598,
              "nodeType": "Block",
              "src": "1952:56:23",
              "statements": [
                {
                  "expression": {
                    "id": 6596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6593,
                      "name": "BuildingContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6534,
                      "src": "1967:16:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 6594,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1986:3:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1990:6:23",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1986:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1967:29:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6597,
                  "nodeType": "ExpressionStatement",
                  "src": "1967:29:23"
                }
              ]
            },
            "functionSelector": "e8c8cc28",
            "id": 6599,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6591,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6590,
                  "name": "NullBuildingContractAddress",
                  "nameLocations": [
                    "1925:27:23"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6547,
                  "src": "1925:27:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "1925:27:23"
              }
            ],
            "name": "setBuildingContractAddress",
            "nameLocation": "1887:26:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1913:2:23"
            },
            "returnParameters": {
              "id": 6592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1952:0:23"
            },
            "scope": 6647,
            "src": "1878:130:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6611,
              "nodeType": "Block",
              "src": "2345:60:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6607,
                        "name": "BuildingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6534,
                        "src": "2368:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6608,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6601,
                        "src": "2385:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6606,
                      "name": "approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1682,
                      "src": "2360:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 6609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2360:33:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6610,
                  "nodeType": "ExpressionStatement",
                  "src": "2360:33:23"
                }
              ]
            },
            "functionSelector": "6d148f84",
            "id": 6612,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6604,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6603,
                  "name": "MustHaveBuildingContract",
                  "nameLocations": [
                    "2321:24:23"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6560,
                  "src": "2321:24:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "2321:24:23"
              }
            ],
            "name": "requestApproval",
            "nameLocation": "2284:15:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6601,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2305:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 6612,
                  "src": "2300:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6600,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2300:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2299:14:23"
            },
            "returnParameters": {
              "id": 6605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2345:0:23"
            },
            "scope": 6647,
            "src": "2275:130:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 6625,
=======
              "id": 6631,
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
              "nodeType": "Block",
              "src": "2456:73:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "expression": {
                          "id": 6616,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2477:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2481:6:23",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2477:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 6621,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 6618,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2489:3:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2493:5:23",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "2489:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 6620,
                              "name": "tokens_per_wei",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6526,
                              "src": "2501:14:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2489:26:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 6622,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2488:28:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6615,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1871,
                      "src": "2471:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2471:46:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6624,
                  "nodeType": "ExpressionStatement",
                  "src": "2471:46:23"
                }
              ]
            },
            "functionSelector": "d4625ae3",
            "id": 6626,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "BuyRentTokens",
            "nameLocation": "2426:13:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2439:2:23"
            },
            "returnParameters": {
              "id": 6614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2456:0:23"
            },
            "scope": 6647,
            "src": "2417:112:23",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6645,
              "nodeType": "Block",
              "src": "2745:66:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6638,
                        "name": "_sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6630,
                        "src": "2766:7:23",
=======
                        "id": 6624,
                        "name": "_sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6616,
                        "src": "2642:7:23",
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
<<<<<<< HEAD
                            "id": 6641,
=======
                            "id": 6627,
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
<<<<<<< HEAD
                              "id": 6639,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6628,
                              "src": "2775:5:23",
=======
                              "id": 6625,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6614,
                              "src": "2651:5:23",
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
<<<<<<< HEAD
                              "id": 6640,
=======
                              "id": 6626,
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
                              "name": "tokens_per_wei",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6526,
<<<<<<< HEAD
                              "src": "2783:14:23",
=======
                              "src": "2659:14:23",
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2775:22:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
<<<<<<< HEAD
                        "id": 6642,
=======
                        "id": 6628,
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2774:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 6637,
=======
                      "id": 6623,
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1871,
                      "src": "2760:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 6643,
=======
                    "id": 6629,
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2760:39:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 6644,
=======
                  "id": 6630,
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
                  "nodeType": "ExpressionStatement",
                  "src": "2760:39:23"
                }
              ]
            },
            "functionSelector": "191dd149",
<<<<<<< HEAD
            "id": 6646,
=======
            "id": 6632,
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 6633,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6632,
=======
                "id": 6619,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6618,
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
                  "name": "MustHaveBuildingContract",
                  "nameLocations": [
                    "2702:24:23"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6560,
<<<<<<< HEAD
                  "src": "2702:24:23"
=======
                  "src": "2578:24:23"
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
                },
                "nodeType": "ModifierInvocation",
                "src": "2702:24:23"
              },
              {
<<<<<<< HEAD
                "id": 6635,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6634,
=======
                "id": 6621,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6620,
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
                  "name": "OnlyBuildingToken",
                  "nameLocations": [
                    "2727:17:23"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6571,
<<<<<<< HEAD
                  "src": "2727:17:23"
=======
                  "src": "2603:17:23"
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
                },
                "nodeType": "ModifierInvocation",
                "src": "2727:17:23"
              }
            ],
            "name": "buyRentTokens",
            "nameLocation": "2650:13:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 6631,
=======
              "id": 6617,
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 6628,
=======
                  "id": 6614,
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2669:5:23",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 6646,
                  "src": "2664:10:23",
=======
                  "scope": 6632,
                  "src": "2540:10:23",
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 6627,
=======
                    "id": 6613,
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2664:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 6630,
=======
                  "id": 6616,
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
                  "mutability": "mutable",
                  "name": "_sender",
                  "nameLocation": "2684:7:23",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 6646,
                  "src": "2676:15:23",
=======
                  "scope": 6632,
                  "src": "2552:15:23",
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 6629,
=======
                    "id": 6615,
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2676:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2663:29:23"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 6636,
=======
              "id": 6622,
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2745:0:23"
            },
            "scope": 6647,
<<<<<<< HEAD
            "src": "2641:170:23",
=======
            "src": "2517:170:23",
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6645,
              "nodeType": "Block",
              "src": "2746:73:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6636,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2767:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2771:6:23",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2767:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 6641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 6638,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2779:3:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2783:5:23",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "2779:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 6640,
                              "name": "tokens_per_wei",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6526,
                              "src": "2791:14:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2779:26:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 6642,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2778:28:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6635,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1871,
                      "src": "2761:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2761:46:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6644,
                  "nodeType": "ExpressionStatement",
                  "src": "2761:46:23"
                }
              ]
            },
            "functionSelector": "d4625ae3",
            "id": 6646,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "BuyRentTokens",
            "nameLocation": "2716:13:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2729:2:23"
            },
            "returnParameters": {
              "id": 6634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2746:0:23"
            },
            "scope": 6647,
            "src": "2707:112:23",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6648,
<<<<<<< HEAD
        "src": "454:2358:23",
=======
        "src": "454:2386:23",
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
        "usedErrors": [
          13,
          18,
          159,
          164,
          169,
          178,
          183,
          188
        ]
      }
    ],
<<<<<<< HEAD
    "src": "298:2520:23"
=======
    "src": "298:2556:23"
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
<<<<<<< HEAD
      "address": "0x33B0a654c2B02fe65982A7Ef0F2bF4A6CCe022eE",
      "transactionHash": "0x43d53ce298b9eed97b9e4c4fba26353153f3b4059f7b7e3147d0d5cd208fdac7"
    },
    "11155111": {
      "events": {},
      "links": {},
      "address": "0x9A41FbD196a24e3e81C1fd78c34D971a64032927",
      "transactionHash": "0xc69565058b538dc24a92ad63d51f67a429a66abdafd19fe16248bb68a5d7a0ba"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2023-12-04T00:59:50.123Z",
=======
      "address": "0x1B3081Bf6275eE1a3909b82D7AFa47cfbb6fE8AF",
      "transactionHash": "0xc4bed483e30151bd4ba9abfad24eb0788d152cf68d5a77b575bbb994e6cbe60d"
    },
    "11155111": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x891c8a8Bd8D70b857d3199C794f324630D325355",
      "transactionHash": "0xe1010bffd45011b8c9d28a86a844907045d300786b3457a3117150b57c62e683"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2023-12-03T23:38:54.081Z",
>>>>>>> 81409e61bd29fd83754989bd8916902be61fec5c
  "networkType": "ethereum",
  "devdoc": {
    "errors": {
      "ERC20InsufficientAllowance(address,uint256,uint256)": [
        {
          "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
          "params": {
            "allowance": "Amount of tokens a `spender` is allowed to operate with.",
            "needed": "Minimum amount required to perform a transfer.",
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "ERC20InsufficientBalance(address,uint256,uint256)": [
        {
          "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
          "params": {
            "balance": "Current balance for the interacting account.",
            "needed": "Minimum amount required to perform a transfer.",
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidApprover(address)": [
        {
          "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
          "params": {
            "approver": "Address initiating an approval operation."
          }
        }
      ],
      "ERC20InvalidReceiver(address)": [
        {
          "details": "Indicates a failure with the token `receiver`. Used in transfers.",
          "params": {
            "receiver": "Address to which tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSender(address)": [
        {
          "details": "Indicates a failure with the token `sender`. Used in transfers.",
          "params": {
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSpender(address)": [
        {
          "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
          "params": {
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}